{
  "seo": {
    "title": "FAQ ‚Äî H√§ufig gestellte Fragen",
    "description": "Schnelle Antworten zu Wallets, Geb√ºhren, unterst√ºtzten Chains und dem Start.",
    "og-title": "Push Chain FAQ - Alle Fragen",
    "og-description": "Finde schnelle Antworten mit Links zu Anleitungen, Testnet und Support.",
    "twitter-title": "FAQ - Hier geht's los",
    "twitter-description": "Schnelle Antworten auf Fragen zu Push Chain."
  },
  "breadcrumbs": {
    "knowledge": {
      "text": "Wissensdatenbank"
    }
  },
  "title": "H√§ufig gestellte Fragen",
  "overview": "## √úbersicht\n\nDer Ort, um Antworten auf alle h√§ufigen Fragen der Community zu Push Chain zu finden. Von der Push Fam ü´∂ beigetragen und vom Push Team üí™ kuratiert.\n\n---",
  "what-is-push-chain": "### Was ist Push Chain?\n\nPush Chain ist eine Shared-State Layer-1-Blockchain, die darauf ausgelegt ist, die Fragmentierung √ºber alle Chains hinweg zu beseitigen.\n\nDurch die Erm√∂glichung **nahtloser Transaktionen von jeder Chain** (Ethereum, Solana, EVM oder nicht-EVM) erm√∂glicht sie jedem Nutzer die Interaktion mit Web3-Apps, ohne mehrere Wallets, Tokens oder Gasmechanismen jonglieren zu m√ºssen.\n\nKurz gesagt, Push Chain vereint L1s ü§ù L2s ü§ù L3s unter einer zusammenh√§ngenden Ebene.\n\n---",
  "how-does-push-chain-work": "### Wie funktioniert Push Chain?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain verfolgt einen einzigartigen Ansatz zur L√∂sung des Problems der Fragmentierung √ºber alle Chains hinweg. Anstatt sich auf Interoperabilit√§tsprotokolle zu verlassen, die sowohl f√ºr Benutzer als auch f√ºr Entwickler Komplexit√§t hinzuf√ºgen, verfolgt Push Chain einen neuartigen Ansatz, indem es eine echte universelle Blockchain aufbaut, die von jedem Benutzer von jeder Chain nativ genutzt werden kann.\n\nUm dies zu erreichen, nutzt Push Chain mehrere **Precompiles**, das sind benutzerdefinierte Module, die erstellt wurden, um:\n\n1. **Benutzer** anderer Chains zu **erkennen** - Universeller Adressstandard, der die Adresse eines Benutzers erweitert, sodass sie Blockchain-agnostisch ist (basierend auf [CAIP-10 Standards](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Benutzer** Push Chain **zuordnen** - F√ºr jeden Benutzer einer externen Chain wird ein Universal Executor Account (UEA) bereitgestellt. Dieses Modul wird verwendet, um ein Smart Account bereitzustellen, das dann andere Precompiles verwendet, um die Transaktionen zu verarbeiten.\n\n3. **Universelle Transaktionen ausf√ºhren** - Dies geschieht durch Verwendung von USV (Universal Signature Verification) und UTXV (Universal Transaction Verifier) Precompiles zur √úberpr√ºfung und Ausf√ºhrung von Signaturen und Transaktionen von anderen Chains.\n\n4. **Die Komplexit√§t der Chain abstrahieren**, auf der sie sich befinden - Dies geschieht durch universelle Gateway-Vertr√§ge auf jeder Chain, die Gas-Fonds im nativen Token der Chain (oder einem anderen konformen Token) sperren und dann die UTXV Precompiles verwenden, um das Gas dem UEA (Executor Account) zuzuschreiben und USV zur Ausf√ºhrung der Transaktion.\n\nDies ist ein **extrem leistungsstarker Ansatz**, der es Benutzern erm√∂glicht, mit jeder App auf Push Chain zu interagieren, ohne sich Gedanken √ºber die Chain, auf der sie sich befinden, oder die Wallet, die sie verwenden, machen zu m√ºssen, da alles sowohl f√ºr die Benutzer als auch f√ºr die Entwickler abstrahiert wird.\n\n---",
  "why-unique-for-users": "### Was macht Push Chain f√ºr Nutzer einzigartig?\n\nPush Chain schlie√üt konkrete L√ºcken in bestehenden Blockchains, wie Interoperabilit√§t, Statuszugriff √ºber verschiedene Chains hinweg, programmierbare Solver und Wallet-Abstraktion, was zu **echter Full-Stack-Interoperabilit√§t** f√ºhrt.  W√§hrend bestehende Blockchains robust sind, operieren sie in ihrem eigenen √ñkosystem und es wird ein Aggregator ben√∂tigt, um diese Chains zu vereinen.\n\nDer Fokus von Push Chain liegt auf einer **Shared-State-Chain** f√ºr universelle (interoperable) Anwendungen, die als vereinheitlichende Schicht dient, wo alle Chains zusammenkommen und Push Chain als universellen Hub nutzen oder zwischen ihnen abwickeln k√∂nnen.\n\nEs bietet ein neues Paradigma von Web3, das von **Any Chain** aus funktioniert. F√ºr **Any Wallet / User**. Und ist geeignet f√ºr **Any App**. \n\n---",
  "core-innovations": "### Was macht Push Chain innovativ?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain ist eine Proof-of-Stake Layer 1, die darauf ausgelegt ist, Fragmentierung √ºber alle Blockchains hinweg zu beseitigen. Unter der Haube kombiniert sie mehrere wichtige Innovationen:\n\n- **Echte universelle Chain**  \n  Unterst√ºtzt nativ alle Chains und erm√∂glicht es Benutzern, mit derselben App zu interagieren. Keine zentralisierten Relayer, Bridges oder andere Tricks erforderlich.\n\n- **Universelle Geb√ºhren & Wallet-Abstraktion**  \n  Erm√∂glicht es Benutzern, mit der App von jeder Chain aus zu interagieren, ohne sich Gedanken √ºber Gas oder Wallet-Mechanismen machen zu m√ºssen.\n\n- **Eine Transaktion f√ºr jede Chain**  \n  Benutzer m√ºssen nur eine Transaktion signieren, egal auf welcher Chain sie sich befinden.\n\n- **Universelle Smart Contracts**  \n  100 % EVM-kompatible Smart Contracts, die mit **ohne √Ñnderungen am On-Chain-Code** bereitgestellt werden k√∂nnen. Nach der Bereitstellung sind sie sofort mit Benutzern aller Chains kompatibel.\n\n- **Universelles EVM**  \n  Push Chain ist intelligent genug, um Benutzer anderer Chains nativ zu erkennen und die Transaktionen korrekt zuzuordnen und darauf zuzuordnen.\n\n- **Gemeinsamer Zustand und programmierbare Solver**  \n  (Roadmap) Erm√∂glicht es Smart Contracts von Push Chain, den Zustand anderer Chains zu lesen und zu schreiben.\n\nZusammen erm√∂glichen diese Funktionen den Aufbau von **universellen Web3-Apps**. Anstatt von \"Uniswap auf Ethereum\" oder \"Uniswap auf Polygon\" wird ein Benutzer einfach zum **Benutzer von Uniswap**‚ÄîPunkt.\n\n---",
  "problems-solved": "### Welche Probleme l√∂st Push Chain?\n\n- **Fragmentierung**  \n  Vereint EVM- und Nicht-EVM-Chains unter einer gemeinsamen L1-Zustandsschicht, sodass Nutzer niemals zwischen Netzwerken oder Wallets wechseln m√ºssen.\n\n- **Interoperabilit√§t**  \n  Native Unterst√ºtzung f√ºr Transaktionen von jeder Blockchain und gemeinsamen On-Chain-Zustand.\n\n- **Finalit√§t**  \n  Sofortige, irreversible native Finalit√§t in ~1‚Äì2 Sekunden ‚Äì kein Warten oder Reorgs mehr.\n\n- **Onboarding & UX**  \n  Social/Email-Login, Gas-in-any-Token & Unterst√ºtzung f√ºr jede Wallet f√ºr einen reibungslosen Zugriff √ºber alle Chains hinweg.\n\n- **Universal Apps**  \n  Einmal entwickeln, √ºberall einsetzen ‚Äì jede Web3-App funktioniert nahtlos f√ºr jeden Nutzer auf jeder Chain.\n\n---",
  "what-apps-can-build": "### Welche Apps k√∂nnen auf Push Chain erstellt werden?\n\n![Universal App Examples](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nMit der Shared-State, Cross-Chain-Architektur von Push Chain sind die M√∂glichkeiten grenzenlos. Hier sind nur ein paar Beispiele:\n\n- **Universal DEX**  \n  Eine Swap-Oberfl√§che f√ºr jeden Liquidit√§tspool ‚Äì abstrahiertes Routing √ºber alle Chains mit der Geschwindigkeit und UX einer CEX.\n\n- **Universal DeFi**  \n  Eine globale Bank in Ihrem Browser: Lending, Borrowing, Yield Aggregatoren, die √ñkosysteme ohne manuelles Bridging umspannen.\n\n- **Universal AI Agents**  \n  Autonome Agents, die in jedem Token auf jeder Chain bezahlen und bezahlt werden ‚Äì perfekt f√ºr Abonnements, Datenbots und mehr.\n\n- **Universal DAOs**  \n  Cross-Chain-Governance, bei der Token-Inhaber unabh√§ngig von ihrer Ursprungskette √ºber Vorschl√§ge abstimmen und diese umsetzen.\n\n- **Universal Gaming**  \n  Multiplayer-Turniere und In-Game-√ñkonomien, die Spieler und Assets von Ethereum, Solana, Polygon und dar√ºber hinaus vereinen.\n\n- **Universal Marketplace**  \n  Kaufen, verkaufen und tauschen Sie NFTs und Tokens von jeder Chain in einem konsolidierten Marketplace.\n\n- **Universal Name Service**  \n  Lesbare Namen, die sich √ºber mehrere Blockchains auf Wallets aufl√∂sen.\n\nDie Apps und Innovationen, die auf Push Chain m√∂glich sind, sind endlos! Hier sind einige [weitere Anwendungsf√§lle](/blog/consumer-apps-that-can-be-built-on-push-chain/) f√ºr den Anfang. Builder k√∂nnen auch das [Documentation Hub](/docs/) besuchen, um loszulegen.\n\n---",
  "technical-section": "## Technik",
  "why-not-an-l2": "### Warum nicht Layer 2, sondern Layer 1?\n\nPush Chain wurde entwickelt, um als **gemeinsame Abwicklungsschicht** und **universelle Ausf√ºhrungsschicht** f√ºr alle anderen Blockchains zu dienen ‚Äì Rollen, die nur ein eigenst√§ndiges Layer 1 erf√ºllen kann:\n\n- **Native Cross-Chain-Abwicklung**  \n  Als Layer 1 kann Push Chain Transaktionen von jeder Chain direkt abschlie√üen, ohne sich auf externe Sicherheitsmodelle oder Betrugsnachweise verlassen zu m√ºssen.\n\n- **Universelle Ausf√ºhrung & Statuszugriff**  \n  Durch die eigene Konsensfindung und Statusmaschine kann Push Chain Transaktionen von Ethereum, Solana und dar√ºber hinaus interpretieren und ausf√ºhren ‚Äì etwas, das ein Layer 2 ‚Äì das an eine Basisschicht gebunden ist ‚Äì nativ nicht leisten kann.\n\n- **Keine Layer-2-Beschr√§nkungen oder Verz√∂gerungen**  \n  Layer 2s erben die Latenz, Finalit√§tsregeln und Gasmodelle ihrer Host-Chain (plus Bridging-Overhead). Push Chain vermeidet diese Engp√§sse durch sofortige Finalit√§t und universelle Geb√ºhrenabstraktion auf der Basisschicht.\n\n- **Wahrer gemeinsamer Status**  \n  Um den Status mehrerer Chains innerhalb von Smart Contracts zu lesen und zu schreiben, ben√∂tigen Sie direkten, protokollbasierten Zugriff ‚Äì der nur auf Layer-1-Ebene verf√ºgbar ist.\n\nKurz gesagt, nur ein speziell entwickelter Layer 1 kann jede Chain unter einer koh√§siven Ausf√ºhrungs- und Abwicklungsschicht vereinen ‚Äì ohne zus√§tzliche Komplexit√§t oder zus√§tzliche Vertrauensannahmen.\n\n---",
  "evm-compatibility": "### Ist Push Chain EVM-kompatibel?\n\nJa, Push Chain ist **EVM-kompatibel** und noch viel mehr. Es unterst√ºtzt:\n\n- **EVM Smart Contracts**: Deploye Solidity-Vertr√§ge genauso wie auf Ethereum\n- **Ethereum Tooling**: Nutze MetaMask, Hardhat, Remix und andere vertraute Tools\n- **Universal Extensions**: Zus√§tzliche vorkompilierte Funktionen f√ºr Cross-Chain-Funktionalit√§t\n- **Multi-VM Support**: (Roadmap) Unterst√ºtzung f√ºr andere VMs wie SVM (Solana), MoveVM, etc.\n\nDas bedeutet, Entwickler k√∂nnen:\n- Bestehende Ethereum dApps mit minimalen √Ñnderungen portieren\n- Vertraute Entwicklungsworkflows und Tools nutzen\n- √úber die universellen Funktionen von Push Chain verbesserte Cross-Chain-Funktionen nutzen\n\nIn der Praxis k√∂nnen Nutzer und Apps von jeder Chain nahtlos mit Push Chain Apps interagieren ‚Äî unabh√§ngig von der zugrunde liegenden VM.\n\n---",
  "evm-non-evm-compatible": "### Wird Push Chain sowohl mit EVM- als auch mit nicht-EVM-Chains kompatibel sein?\n\nJa! Push Chain ist darauf ausgelegt, jede Blockchain-Paradigma zu √ºberbr√ºcken.\n\n- **EVM-Kompatibilit√§t**  \n  Ihre Solidity-Contracts k√∂nnen ohne √Ñnderungen √ºbernommen werden und nutzen die EVM-Laufzeit von Push Chain.\n\n- **Unterst√ºtzung f√ºr nicht-EVM-Chains**  \n  Native Precompiles (USV/UTXV) und der universelle Adressstandard erm√∂glichen es Push Chain, Transaktionen von Solana, Bitcoin, Cosmos SDK-Chains und mehr zu validieren und auszuf√ºhren.\n\nIn der Praxis k√∂nnen Nutzer und Apps von jeder Chain nahtlos mit Push Chain Apps interagieren ‚Äì unabh√§ngig von der zugrunde liegenden VM.\n\n---",
  "why-not-ethereum-or-solana": "### Warum eine neue Blockchain erstellen, wenn es bereits etablierte wie Ethereum und Solana gibt?\n\nBestehende Blockchains sind in ihren jeweiligen Bereichen hervorragend, f√ºhren aber zu **Fragmentierung**:\n\n- **Ethereum**: Ideal f√ºr DeFi, aber teuer und langsam\n- **Solana**: Schnell und g√ºnstig, aber mit anderer Tooling und anderem √ñkosystem\n- **L2s**: L√∂sen Skalierungsprobleme, schaffen aber noch mehr Fragmentierung\n\nPush Chain konkurriert nicht mit diesen Blockchains ‚Äì sie **vereint sie**:\n\n- Benutzer k√∂nnen mit ihren bestehenden Wallets (MetaMask, Phantom usw.) mit Push Chain Apps interagieren\n- Gas in ihren bevorzugten Token bezahlen (ETH, SOL, USDC)\n- Entwickler entwickeln einmal und deployen nicht auf mehreren Chains\n- Liquidit√§t und Benutzer aus allen Chains k√∂nnen in den gleichen Apps interagieren\n\nPush Chain ist das **fehlende Puzzleteil**, das alle bestehenden Chains nahtlos zusammenarbeiten l√§sst.\n\n---",
  "shared-state-meaning": "### Was bedeutet Blockchain mit gemeinsamem Zustand?\n\nEin gemeinsamer Zustand bezieht sich auf den aktuellen Status von Onchain-Daten. Eine Blockchain mit gemeinsamem Zustand ist eine, die Lese- und Schreibzugriff auf ihren eigenen Zustand sowie auf den Zustand aller anderen Chains hat, mit denen sie interagiert.\n\nEine Chain mit gemeinsamem Zustand ist in der Lage, Daten, Liquidit√§t und Benutzer von jeder anderen Chain zu verarbeiten.\n\n---",
  "how-achieve-shared-state": "### Wie erreicht Push Chain einen gemeinsamen Zustand?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nEine traditionelle Blockchain kennt lediglich ihr eigenes Ledger und ihren eigenen Wallet-Standard. Push Chain erweitert dieses Modell in vier Schl√ºsselbereichen:\n\n1. **Universelle Wallet-Kompatibilit√§t**  \n\t- Unterst√ºtzt kettenunabh√§ngige Adressen von jeder Kette (Ethereum, Solana, Bitcoin, Cosmos SDK, etc.)  \n\t- Signaturen von jeder Kette werden √ºber USV/UTXV Precompiles verifiziert, sodass Nutzer niemals die Wallets wechseln m√ºssen.\n\n2. **Universelle Smart Contracts**  \n\t- EVM-Contracts werden unver√§ndert bereitgestellt, k√∂nnen aber nativ Cross-Chain-Transaktionen verifizieren und ausf√ºhren.  \n\t- Die Runtime von Push Chain √ºbernimmt die Signatur-Zuordnung und Payload-Analyse f√ºr jedes unterst√ºtzte Netzwerk.\n\n3. **On-Chain Shared State**  \n\t- Validatoren best√§tigen Merkle-Beweise des externen Kettenzustands (√ºber MPT-Roots) in jedem Block.  \n\t- Relayer holen bei Bedarf Leaf-Proofs ab und reichen sie ein, sodass Vertr√§ge Daten jeder Kette in Echtzeit lesen k√∂nnen.\n\n4. **Programmierbare Solver**  \n\t- Ein Solver-Netzwerk f√ºhrt atomare Cross-Chain-Workflows aus (z.B. Swap auf Kette A, Mint auf Kette B) unter einer einzigen Transaktion.  \n\t- Entwickler schreiben einfache Solver-Skripte; das Netzwerk √ºbernimmt Routing und Ausf√ºhrung.\n\nZusammen machen diese Funktionen Push Chain zu einer **Shared-State L1**, die es universellen Apps erm√∂glicht, nativ f√ºr alle Ketten zu sein. Eine Welt, in der jeder Nutzer jeder Kette in der Lage ist, auf jede App in jeder anderen Kette zuzugreifen und mit ihr zu interagieren.\n\n**Jede Kette, Jede App, Jeder Nutzer - Ein Push Chain**\n\n---",
  "consensus-mechanism": "### Welchen Konsensmechanismus verwendet Push Chain?\n\nPush Chain verwendet den **Proof-of-Stake (PoS)** Konsensmechanismus, der auf der **CometBFT** Engine basiert und mehrere Verbesserungen bietet:\n\n- **Schnelle Finalit√§t**: Transaktionen werden in ca. 1‚Äì2 Sekunden finalisiert, mit deterministischer Finalit√§t (keine Reorgs)\n- **Energieeffizient**: PoS ist umweltfreundlicher als PoW\n- **Validator-Netzwerk**: Dezentrales Netzwerk von Validatoren, das die Chain sichert\n- **Slashing-Schutz**: Wirtschaftliche Anreize gew√§hrleisten die Ehrlichkeit der Validatoren\n\nCometBFTs bew√§hrter BFT-Konsensmechanismus ist hier f√ºr die besonderen Anforderungen universeller Transaktionsverarbeitung und Cross-Chain-State-Management optimiert.\n\n---",
  "transaction-fees": "### Wie funktionieren Transaktionsgeb√ºhren auf Push Chain?\n\nPush Chain revolutioniert die Geb√ºhrenzahlung mit **Universal Fee Abstraction**:\n\n- **Bezahlen mit jedem Token**: Nutzer k√∂nnen Gas in ETH, SOL, USDC oder jedem unterst√ºtzten Token bezahlen\n- **Cross-Chain Geb√ºhrenzahlung**: Bezahlen Sie Geb√ºhren von Ihrer Ursprungskette aus, ohne Br√ºcken verwenden zu m√ºssen\n- **Geb√ºhrenfreie Transaktionen**: Apps k√∂nnen Nutzer-Transaktionen f√ºr ein nahtloses Nutzererlebnis sponsern\n- **Dynamischer Geb√ºhrenmarkt**: Geb√ºhren passen sich der Netzwerk-Nachfrage an\n\nDas bedeutet, dass Nutzer niemals native Push Chain Tokens erwerben m√ºssen, um mit Apps zu interagieren.\n\n---",
  "true-universal-chain": "### Was bedeutet True Universal Chain?\n\nEine **True Universal Chain** ist eine Blockchain, die jedes andere Netzwerk als gleichberechtigten Partner behandelt ‚Äì keine Bridges, keine zentralisierten Relayer und keine Kompatibilit√§tshacks. Sie bietet:\n\n1. **Native Multichain-Identit√§t**  \n\tWallets von Ethereum, Solana, jeder EVM- oder Nicht-EVM-Chain k√∂nnen nativ auf Push Chain signieren, verifizieren und ausf√ºhren. So m√ºssen Nutzer niemals Konten wechseln oder sich mit der Komplexit√§t mehrerer Wallets herumschlagen.\n\n2. **Einheitliche Abwicklung**  \n\tTransaktionen von jedem Netzwerk werden auf Push Chain endg√ºltig abgewickelt, was jedem eine einzige Quelle der Wahrheit bietet und die gleiche App f√ºr Nutzer aller Chains zug√§nglich macht.\n\n3. **Einheitliche Transaktion und universelle Geb√ºhrenabstraktion**  \n\tNutzer signieren nur eine Transaktion, unabh√§ngig von ihrer Quell-Chain und bezahlen Gas in jedem Token. Kein Warten oder Umtauschen unz√§hliger Token, um eine App zu nutzen.\n\n4. **Einmal deployen, √ºberall nutzen**  \n\tEntwickler schreiben und deployen Smart Contracts einmal (EVM oder anderweitig) ohne **zus√§tzlichen** Code ‚Äì ein Deployment deckt alle Chains ab.\n\nPush Chain ist die erste, die diese Funktionen direkt in ihren Konsens und ihre Runtime einbaut und so Fragmentierung wirklich beseitigt ‚Äì keine Workarounds, keine zus√§tzlichen Schichten, nur eine universelle Chain f√ºr alle.\n\n---",
  "competitors-section": "## Wettbewerber",
  "vs-other-universal": "### Was Push Chain von anderen Universal Solutions unterscheidet?\n\nDie sogenannten \"universellen\" L√∂sungen von heute verlassen sich immer noch auf Bridges, erfordern doppelte Transaktionen oder zentralisierte Relayer, um Daten und Werte zu √ºbertragen. Push Chain ist anders ‚Äì es ist die erste **echte** universelle L1, die:\n\n- **Nutzer √ºber Ketten hinweg vereinheitlicht**  \n\tJede Blockchain-Adresse wird nativ unterst√ºtzt. Wallets wie MetaMask, Phantom usw. sind alle mit Push Chain kompatibel. Gas wird in jedem Token auf jeder Kette bezahlt.\n\n- **Als universelle Ausf√ºhrungsschicht fungiert**  \n\tAlle Transaktionen werden auf derselben Kette abgeschlossen, wodurch sichergestellt wird, dass jeder mit derselben App interagiert ‚Äì keine Hacks, keine Umwege.\n\n- **Transaktionen jeder Kette korrekt zuordnet & ausf√ºhrt**  \n\tTransaktionen werden signiert, verifiziert und Wallets auf ihren Quellketten zugeordnet. Eine echte universelle Kette unterst√ºtzt sie alle.\n\n---",
  "vs-bridges-messaging": "### Worin besteht der Unterschied zu Br√ºcken oder Messaging-Layern?\n\n**Kurze Antwort**: Push ist der Ort, an dem deine App l√§uft. Br√ºcken/Messaging bewegen lediglich Token oder Nachrichten zwischen Chains, was sowohl f√ºr Nutzer als auch Entwickler alles verkompliziert.\n\n- **Ein Home vs viele Klone**  \n\tMit Br√ºcken/Messaging deployst du pro Chain und synchronisierst √ºber Nachrichten. Auf Push deployst du einmal; jeder greift auf denselben Vertrag und gemeinsamen Status zu.\n\n- **Keine Wrapped Assets oder obligatorische Bridging**  \n\tNutzer bleiben auf ihrer Home Chain und zahlen mit dem, was sie bereits besitzen; wir √ºbernehmen das Routing und die Geb√ºhrenkonvertierung im Hintergrund.\n\n- **Vereinheitlichte Identit√§t & Verifizierung**  \n\tWir akzeptieren Signaturen von jedem Wallet/Chain und ordnen sie demselben Nutzer auf Push zu ‚Äì nicht-verwahrungsbasiert.\n\n- **Weniger bewegliche Teile**  \n\tKein cross-chain Approval-Tanz, keine Suche nach Gas-Tokens, keine Glue Contracts, die synchron gehalten werden m√ºssen.\n\n- **Nutze Br√ºcken, wenn du m√∂chtest, nicht weil du musst**  \n\tLiquidit√§t kann weiterhin √ºber Br√ºcken flie√üen, aber die Interaktion mit deiner App erfordert dies nicht.\n\n**Ergebnis**: einfachere Apps, eine einzige Quelle der Wahrheit und eine UX, die sich wie eine Chain anf√ºhlt ‚Äì auch wenn die Nutzer es nicht sind.\n\n---",
  "vs-layerzero": "### Worin unterscheidet sich Push Chain von LayerZero?\n\n**LayerZero:**\n- **Messaging Protocol**: Erm√∂glicht Cross-Chain-Nachrichten√ºbertragung\n- **Relayer Dependency**: Verl√§sst sich auf externe Relayer und Orakel\n- **Developer Integration**: Apps m√ºssen das LayerZero SDK integrieren\n- **Trust Assumptions**: Benutzer m√ºssen der Relayer-Infrastruktur vertrauen\n\n**Push Chain:**\n- **Native Execution**: Direkte Transaktionsausf√ºhrung von jeder Chain aus\n- **No Relayers**: Integrierte Cross-Chain-Funktionalit√§t auf Protokollebene\n- **Zero Integration**: Bestehende Apps funktionieren ohne √Ñnderungen\n- **Trust-Minimized**: Keine zus√§tzlichen Vertrauensannahmen √ºber den eigenen Konsens von Push Chain hinaus\n\nPush Chain bietet native Cross-Chain-Ausf√ºhrung, w√§hrend LayerZero zus√§tzliche Infrastruktur und Integration erfordert.\n\n---",
  "vs-wormhole": "### Wie unterscheidet sich Push Chain von Wormhole?\n\n**Wormhole:**\n- **Bridge-Protokoll**: Konzentriert sich haupts√§chlich auf das Bridgen von Token und NFTs\n- **Verpackte Assets**: Erstellt verpackte Versionen von Token auf verschiedenen Chains\n- **Guardian Network**: Verl√§sst sich auf ein Validatoren-Set zur Verifizierung von Cross-Chain-Nachrichten\n- **Mehrstufiger Prozess**: Nutzer m√ºssen Assets br√ºcken, bevor sie Apps nutzen\n\n**Push Chain:**\n- **Universelle Ausf√ºhrung**: Nutzer interagieren direkt, ohne Bridgen\n- **Native Assets**: Keine verpackten Token erforderlich, nutze originale Assets\n- **Direkte Verifizierung**: Native Signaturverifizierung von jeder Chain\n- **Einzelne Transaktion**: Nutzer interagieren in einem Schritt, kein Bridgen erforderlich\n\nPush Chain macht das Bridgen von Assets √ºberfl√ºssig, w√§hrend Wormhole es f√ºr Cross-Chain-Interaktionen ben√∂tigt.\n\n---",
  "vs-axelar": "### Wie unterscheidet sich Push Chain von Axelar?\n\n**Axelar:**\n- **Netzwerk der Netzwerke**: Verbindet Chains √ºber das Axelar Netzwerk\n- **Validator-Abh√§ngigkeit**: Verl√§sst sich f√ºr die Sicherheit auf das Axelar Validator-Set\n- **Gateway-Contracts**: Erfordert Gateway-Deployments auf jeder Chain\n- **Message Passing**: Fokussiert sich auf Cross-Chain-Kommunikation\n\n**Push Chain:**\n- **Direkte Ausf√ºhrung**: Transaktionen werden nativ auf Push Chain ohne Zwischenh√§ndler verarbeitet\n- **Unabh√§ngige Sicherheit**: Eigener Konsens ohne externe Abh√§ngigkeiten\n- **Universelle Contracts**: Ein einzelner Deployment funktioniert f√ºr alle Chains\n- **Native Ausf√ºhrung**: Direkte Transaktionsverarbeitung von jeder Chain\n\nPush Chain bietet direkten universellen Zugang, w√§hrend Axelar eine Zwischenschicht hinzuf√ºgt.\n\n---",
  "vs-chainlink-ccip": "### Wie unterscheidet sich Push Chain von Chainlink CCIP?\n\n**Chainlink CCIP:**\n- **Oracle-Netzwerk**: Nutzt die Oracle-Infrastruktur von Chainlink\n- **Nachrichtenweiterleitung**: Leitet Nachrichten zwischen verschiedenen Chains weiter\n- **Externe Abh√§ngigkeit**: Verl√§sst sich auf das dezentrale Netzwerk von Chainlink\n- **Integration erforderlich**: Apps m√ºssen CCIP integrieren, um Cross-Chain-Funktionen nutzen zu k√∂nnen\n\n**Push Chain:**\n- **Integrierter Protokoll**: Cross-Chain-Funktionalit√§t ist nativ in der Blockchain integriert\n- **Direkte Ausf√ºhrung**: Kein externes Oracle-Netzwerk erforderlich\n- **Selbstst√§ndig**: Alle Verifikationen und Ausf√ºhrungen erfolgen auf Push Chain\n- **Automatische Kompatibilit√§t**: Bestehende Contracts k√∂nnen bereitgestellt werden ‚Äì sie funktionieren sofort f√ºr alle Nutzer\n\nPush Chain verf√ºgt √ºber Cross-Chain-Funktionalit√§t, die direkt in das Kernprotokoll integriert ist, w√§hrend CCIP eine externe Dienstebene ist.\n\n---",
  "vs-particle-network": "### Wie unterscheidet sich Push Chain von Particle Network?\n\n**Particle Network:**\n- **Fokus auf Account Abstraction**: Konzentriert sich haupts√§chlich auf Wallet-Abstraktion und Social Login\n- **Multi-Chain Wallets**: Erstellt eine einheitliche Wallet-Erfahrung √ºber verschiedene Chains hinweg\n- **SDK-Integration**: Erfordert die Integration des Particle SDK f√ºr Funktionalit√§t\n- **User Experience Layer**: Funktioniert als Layer auf bestehenden Chains\n\n**Push Chain:**\n- **Universelle Blockchain**: Native Blockchain, die alle Chain-Nutzer unterst√ºtzt\n- **Protokoll-Level Integration**: Cross-Chain-Funktionalit√§t ist in den Konsens eingebaut\n- **Kein SDK erforderlich**: Bestehende Wallets funktionieren nativ ohne Modifikation\n- **Basisschicht**: Bietet die zugrunde liegende Blockchain-Infrastruktur, nicht nur eine UX-Schicht\n\nPush Chain ist eine universelle Blockchain, w√§hrend Particle Network ein Wallet-Abstraktionsdienst ist.\n\n---",
  "vs-agglayer": "### Worin unterscheidet sich Push Chain von AggLayer?\n\n**AggLayer (Polygon):**\n- **Aggregation Layer**: Aggregiert Liquidit√§t und Status √ºber verschiedene Polygon-Chains hinweg\n- **Polygon-√ñkosystem**: Speziell f√ºr Polygon CDK-Chains konzipiert\n- **Gemeinsames Sequencing**: Bietet einheitliches Sequencing f√ºr verbundene Chains\n- **√ñkosystemspezifisch**: Auf das Chain-√ñkosystem von Polygon beschr√§nkt\n\n**Push Chain:**\n- **Universelle Chain**: Funktioniert mit jeder Blockchain, nicht √∂kosystemspezifisch\n- **Native Ausf√ºhrung**: Direkte Transaktionsausf√ºhrung von jeder Chain\n- **Chain-Agnostisch**: Unterst√ºtzt Ethereum, Solana, Bitcoin und alle anderen\n- **Ein Deployment, universelle Apps**: Deployen Sie einen Smart Contract einmal auf Push Chain, und er wird f√ºr Benutzer von jeder Chain zug√§nglich ‚Äì erm√∂glicht so eine echte Interoperabilit√§t auf App-Ebene\n\nPush Chain erm√∂glicht universelle Anwendungen mit einem einzigen Deployment √ºber alle Blockchains hinweg, w√§hrend AggLayer sich auf die Aggregation von Liquidit√§t und Sequencing innerhalb des Polygon-√ñkosystems konzentriert.\n\n---",
  "vs-cosmos": "### Was unterscheidet Push Chain von Cosmos?\n\nBeide erm√∂glichen zwar Cross-Chain-Funktionalit√§t, die Ans√§tze sind jedoch grundlegend unterschiedlich:\n\n**Cosmos:**\n- **Hub-and-Spoke-Modell**: Chains verbinden sich √ºber das IBC-Protokoll\n- **Getrennte √ñkosysteme**: Jede Chain verwaltet ihren eigenen Zustand und ihre eigenen Nutzer\n- **Manuelles Bridging**: Nutzer m√ºssen Assets zwischen Chains br√ºcken\n- **Komplexit√§t f√ºr Entwickler**: Ben√∂tigt Deployments auf mehreren Chains\n\n**Push Chain:**\n- **Universelle Chain**: Single Chain, die nativ alle Nutzer unterst√ºtzt\n- **Gemeinsamer Zustand**: Ein einheitlicher Zustand, der von jeder Chain aus zug√§nglich ist\n- **Kein Bridging**: Nutzer interagieren direkt von ihrer Ursprungs-Chain aus\n- **Einmal Deployment**: Ein einzelnes Deployment funktioniert f√ºr alle Chain-Nutzer\n\nPush Chain macht manuelles Bridging und Multi-Chain-Deployments √ºberfl√ºssig und bietet eine einfachere, einheitliche UX.\n\n---",
  "vs-polkadot": "### Wie unterscheidet sich Push Chain von Polkadot?\n\n**Polkadot:**\n- **Parachain-Modell**: Begrenzte Slots f√ºr verbundene Chains\n- **Abh√§ngigkeit vom Relay Chain**: Alle Parachains sind von der Sicherheit der Relay Chain abh√§ngig\n- **Substrate-Framework**: Erfordert ein spezifisches Entwicklungs-Framework\n- **Auktionssystem**: Teure Auktionsverfahren f√ºr Parachain-Slots\n\n**Push Chain:**\n- **Universelle Unterst√ºtzung**: Unterst√ºtzt nativ jede bestehende Chain\n- **Unabh√§ngige Sicherheit**: Eigener Konsens und eigener Validator-Pool\n- **EVM-Kompatibel**: Verwendung bestehender Ethereum-Tools und -Contracts\n- **Keine Auktionen**: Direkte Integration ohne Wettbewerbsgebote\n\nPush Chain integriert sich direkt in bestehende Chains, w√§hrend Polkadot erfordert, dass Chains als Parachains neu aufgebaut werden.\n\n---",
  "token-section": "## Token-bezogene Informationen",
  "new-token": "### Wird es einen neuen Token geben, der mit Push Chain verbunden ist?\n\nAls neue Layer-1-Blockchain w√ºrde Push Chain ihren eigenen nativen Token mit einer Token√∂konomie haben, die auf die Funktionsweise, Wartung und Sicherheit einer Blockchain zugeschnitten ist.\n\nAlle Details finden Sie in unserem [Tokenomics Deep Dive](/knowledge/tokenomics/) üëÄ.\n\n---",
  "developers-section": "## Entwickler, Nutzer und Node-Betreiber",
  "early-adopter-incentives": "### Gibt es Anreize f√ºr Fr√ºhnutzer oder Node-Betreiber auf Push Chain?\n\nNode-Betreiber erhalten Staking-Belohnungen, sobald das Mainnet startet, und werden ermutigt, am **Push Points Program** teilzunehmen, um Belohnungen zu verdienen.\n\nFr√ºhnutzer werden ermutigt, am **Push Points Program** teilzunehmen, um Belohnungen zu verdienen. Beginne mit einem Besuch von [Push Portal](https://portal.push.org/).\n\n---",
  "developer-user-benefits": "### Welche Vorteile bietet Push Chain Entwicklern und Nutzern?\n\n**üßô F√ºr Entwickler**\n\n- **Einmal bereitstellen, 10√ó gr√∂√üere Reichweite**  \nStelle deine App nur einmal bereit ‚Äì ohne Code√§nderungen ‚Äì und sie l√§uft auf jeder unterst√ºtzten Chain, sogar auf nicht-EVM-Netzwerken.\n\n- **Audit-freundlich, 100% EVM-kompatibel**  \nNutze bestehende Solidity-Vertr√§ge ohne zus√§tzliche Audits oder Umschreibungen ‚Äì konzentriere dein Budget auf Funktionen, nicht auf die Infrastruktur.\n\n- **Einheitliches, reibungsloses Nutzererlebnis**  \nNutzer signieren eine Transaktion, zahlen mit jedem Token und interagieren √ºber jedes Wallet ‚Äì deine App funktioniert einfach √ºberall.\n\n- **Blitzschnelle Entwicklungsumgebung**  \nStarte mit unseren SDKs, virtuellen Editoren und React-Playgrounds; von null auf live in Minuten.\n\n**ü¶π F√ºr Nutzer**\n\n- **Onboarding mit einem Klick**  \nMelde dich mit E-Mail, Social Media oder jedem bestehenden Wallet an ‚Äì keine Seed Phrasen oder Chain-Hopping mehr.\n\n- **Nahtlose Interaktionen**  \nGas, Wallet und Chain-Komplexit√§ten sind versteckt ‚Äì genie√üe Apps, als w√§ren sie nativ f√ºr dein Netzwerk.\n\n- **Wir sind schnell**  \nTransaktionen werden in 1-2 Sekunden abgeschlossen ‚Äì f√ºhlt sich an wie nativ f√ºr die Chain, auf der du bist.\n\n---",
  "how-to-build": "### Wie k√∂nnen Entwickler mit dem Aufbau auf Push Chain beginnen?\n\nüöÄ Besuche unser [Dokumentationszentrum](/docs/), um alles zu finden, was du brauchst:\n\n- üñ•Ô∏è **Virtuelle Code-Editoren**: Starte SDK-Funktionsaufrufe direkt in deinem Browser\n- ‚öõÔ∏è **React Playground**: Prototypisiere dein Frontend in Echtzeit\n- üìö **End-to-End-Beispiele**: Folge vollst√§ndigen Projektanleitungen\n\nDu hast in wenigen Minuten eine Beispiel-App am Laufen ‚Äì ohne lokale Einrichtung!\n\n---",
  "dao-section": "## DAO und F√∂rderungen",
  "governance-changes": "### Wie wird sich das aktuelle Governance-System mit dem Start des neuen Tokens √§ndern?\n\nDas Push DAO Governance-System wird sich mit dem Start von Push Chain sowohl weiterentwickeln als auch erweitern. Dies ist ein erwarteter Prozess, da Push zu etwas Umfassenderem wird als urspr√ºnglich. \n\nDelegierte, Botschafterprogramme, SubDAOs und andere DAO-Initiativen werden aktualisiert, um die wichtigsten Ziele zu widerspiegeln, ein Hub f√ºr universelle Anwendungen zu werden, der von allen Gruppen betrieben wird, die dies erm√∂glichen.\n\n---",
  "doubts-section": "## Fragen",
  "push-services-future": "### Was passiert mit Push-Benachrichtigungen und Push-Chat?\n\nPush Chain ist eine nat√ºrliche Weiterentwicklung der Vision des Push-Protokolls. Die aktuellen Dienste des Push-Protokolls bleiben eine Priorit√§t, sodass sie sich kontinuierlich verbessern und gleichzeitig von der neuen Infrastruktur profitieren k√∂nnen.\n\nDie heutigen Push-Benachrichtigungs- und Chat-Protokolle werden erheblich davon profitieren, auf Push Chain aufzubauen. Ein eigenes Team wird sich auf die Wartung und Verbesserung dieser Protokolle konzentrieren, um sicherzustellen, dass sie der De-facto-Standard in ihren jeweiligen Bereichen bleiben.\n\nDurch die Ausrichtung auf Push Chain werden Benachrichtigungen und Chats, die √ºber die Protokolle gesendet werden, als Transaktionen auf der Chain verarbeitet. Diese Integration erm√∂glicht es diesen Protokollen nicht nur, einen Mehrwert zu generieren, sondern markiert auch den Beginn eines neuen Kapitels in ihrer Entwicklung, das ihre N√ºtzlichkeit und ihren Einfluss innerhalb des Web3-√ñkosystems weiter steigert.\n\n---",
  "project-distraction": "### Lenkt dieses Projekt von der Verbesserung der aktuellen Dienste ab?\n\nNein, lies ‚òùÔ∏è [oben](#what-happens-to-push-notification-and-push-chat).\n\n---",
  "core-focus-shift": "### Ist Push Chain ein Abweichen vom Kerngesch√§ft von Push Protocol, das sich auf Benachrichtigungen und Chat konzentriert?\n\nNein. Push Chain baut auf der etablierten Grundlage von Push Protocol auf. Push Chain stellt die **n√§chste Entwicklung** von Push Protocol dar, nicht eine Abkehr davon.\n\n---",
  "partnerships-effect": "### Wie wird der Start von Push Chain bestehende Partnerschaften und Integrationen beeinflussen?\n\nPush Chain erg√§nzt bestehende Partnerschaften durch zus√§tzliche Funktionen wie Cross-Chain-Unterst√ºtzung, schnellere Finalit√§t und skalierbare L√∂sungen. Es st√§rkt die Zusammenarbeit, indem es Partnern erm√∂glicht, universelle Anwendungen zu erstellen und zu skalieren.\n\n---",
  "decentralization-scaling": "### Wie wird Push Chain Dezentralisierung bei der Skalierung erhalten?\n\nUnser Devnet hat gezeigt, wie wir durch dynamische Sharding und parallele Ausf√ºhrung skalieren‚Äîwir steigern den Durchsatz, ohne die Dezentralisierung zu beeintr√§chtigen.\n\nIm Testnet haben wir uns auf die vollst√§ndige Interoperabilit√§t mit der Chain konzentriert, die auf [CometBFT](https://github.com/cometbft/cometbft) l√§uft, einer bew√§hrten, Byzantinisch fehlertoleranten Engine. Das Netzwerk erreichte eine Sub-Sekunden-Finalit√§t und ist in der Lage, bis zu [20.000 Transaktionen pro Minute](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md) zu verarbeiten.\n\nDieser Proof of Concept ist erst der Anfang. Wir sind zuversichtlich, dass Push Chain mit weiteren Skalierungsoptimierungen in sp√§teren Phasen die Anforderungen universeller Anwendungen erf√ºllen kann‚Äîsicher und ohne Zentralisierung.\n\n---",
  "centralization-risks": "### Gibt es Zentralisierungsrisiken bei Push Chain?\n\n**Nein.** Die Architektur von Push Chain legt gro√üen Wert auf Dezentralisierung.\n\nPush Chain ist vollst√§ndig dezentralisiert und wurde auf Robustheit und Widerstandsf√§higkeit ausgelegt. Jeder kann einen Node betreiben und am Netzwerk teilnehmen und wird durch PoS incentiviert oder bestraft. Zusammenfassend:\n\n- Validatoren und andere Akteure agieren unabh√§ngig und werden durch PoS incentiviert.\n- Governance-Mechanismen gew√§hrleisten die Beteiligung der Community.\n- Jede Partei im √ñkosystem ist in gewissem Umfang in die Governance eingebunden.\n\nWeitere Informationen zum Betrieb eines Nodes finden Sie in unserer [Knowledge Base](/knowledge/) oder auf unserem [Validator Node Repo](https://github.com/pushchain/push-chain-node).\n\n---",
  "support-section": "## Support und Engagement",
  "need-help": "### Ich brauche Hilfe, wo kann ich Push Chain kontaktieren?\n\nF√ºr Unterst√ºtzung kannst du [hier ein Ticket einreichen](https://app.push.org/support) oder uns unter support@push.org erreichen.\n\nWenn du ein Entwickler bist, kannst du uns auch gerne auf unserem [Discord](https://discord.com/invite/pushchain) kontaktieren und wir helfen dir gerne weiter.\n\n---",
  "how-to-contribute": "### Super, wie kann ich mitwirken?\n\nDer beste Weg, um √ºber den Fortschritt von Push Chain auf dem Laufenden zu bleiben, ist √ºber die offiziellen Push-Kan√§le: Website, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject), und [Discord](https://discord.com/invite/pushchain).\n\nSei stets vorsichtig vor Phishing-Versuchen, gef√§lschten Websites oder Betrugsversuchen, die deine Krypto verlangen. Alle offiziellen Mitteilungen werden √ºber unsere offiziellen Push-Kan√§le ver√∂ffentlicht.\n\n---"
}