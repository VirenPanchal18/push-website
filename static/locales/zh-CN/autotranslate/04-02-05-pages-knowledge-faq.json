{
  "seo": {
    "title": "常见问题解答 — 精选常见问题",
    "description": "关于钱包、费用、支持的链以及入门的快速解答。",
    "og-title": "Push Chain 常见问题解答 - 所有问题",
    "og-description": "查找快速解答，链接到指南、testnet 和支持。",
    "twitter-title": "常见问题解答 - 从这里开始",
    "twitter-description": "关于 Push Chain 问题的快速解答。"
  },
  "breadcrumbs": {
    "knowledge-base": "知识库"
  },
  "title": "常见问题解答",
  "overview": "## 概述\n\n这里可以找到关于 Push Chain 的常见问题解答。内容来自 Push 社区 🫶，并由 Push 团队 💪 整理。\n\n---",
  "what-is-push-chain": "### Push Chain 是什么？\n\nPush Chain 是一个共享状态的 Layer 1 区块链，旨在消除所有链之间的碎片化。\n\n通过启用**来自任何链的无缝交易** (以太坊、Solana、EVM 或 non-EVM)，它允许任何用户无需在多个钱包、代币或 gas 机制之间切换即可与 web3 app 交互。\n\n简而言之，Push Chain 将 L1s 🤝 L2s 🤝 L3s 统一在一个凝聚的 layer 下。\n\n---",
  "how-does-push-chain-work": "### Push Chain 是如何工作的？\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain 采用独特的方法来解决跨链碎片化问题。它不依赖于互操作性 protocol，互操作性 protocol 会为用户和开发者增加复杂性，而是采取了一种新颖的方法，通过构建一个真正的 universal blockchain 来解决问题，任何用户都可以从任何链上原生使用该区块链。\n\n为了实现这一点，Push Chain 利用了几个 **precompiles**，这些是创建的自定义模块，用于：\n\n1. **Recognize** 其他链上的用户 - Universal 地址标准，它扩展了用户的地址，使其与区块链无关（基于 [CAIP-10 standards](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)）。\n\n2. **Map** 用户到 Push Chain - 为每个外部链用户部署一个 Universal Executor Account（UEA）。该模块用于部署一个 smart account，然后使用其他 precompiles 来处理交易。\n\n3. **Execute** universal 交易 - 这通过使用 USV（Universal Signature Verification）和 UTXV（Universal Transaction Verifier）precompiles 来验证和执行来自其他链的签名和交易来实现。\n\n4. **Abstract** 隐藏他们所处链的复杂性 - 这是通过在每个链上拥有 universal gateway 合约来实现的，该合约锁定链的 native token 中的 gas 资金（或任何其他合规 token），然后使用 UTXV precompiles 将 gas 归属于 UEA（Executor Account），并使用 USV 来执行交易。\n\n这是一个 **extremely powerful approach**，它允许用户与 Push Chain 上的任何 app 交互，而无需担心他们所处的链或他们使用的 wallet，因为所有内容都已被抽象化，无论对于用户还是开发者。\n\n---",
  "why-unique-for-users": "### 为什么 Push Chain 对用户来说是独一无二的？\n\nPush Chain 解决了现有区块链中的特定问题，例如互操作性、跨链状态访问、可编程求解器和钱包抽象，从而实现**真正的全栈互操作性**。虽然现有的区块链都非常稳定，但它们在各自的生态系统中运行，需要一个聚合器来统一这些链。\n\nPush Chain 的重点是成为一个**共享状态链**，用于通用（可互操作）应用，充当所有链可以汇聚并使用 Push Chain 作为通用枢纽或进行链间结算的统一层。\n\n它提供了一种新的 Web3 范例，可以从**任意链**运行。适用于**任意钱包/用户**。并且适合**任意 App**。\n\n---",
  "core-innovations": "### Push Chain 的创新之处是什么？\n\n![Push Chain 架构](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain 是一个权益证明 Layer 1，旨在消除所有区块链之间的碎片化。 在底层，它结合了几个关键的创新：\n\n- **真正的通用链**  \n  原生支持所有链，并使用户能够与相同的 app 交互。 无需集中式中继器、桥接或其他技巧。\n\n- **通用费用 & 钱包抽象**  \n  允许用户无需担心 gas 或钱包机制即可与 app 交互。\n\n- **任何链的单笔交易**  \n  无论用户在哪个链上，用户只需签名一次交易。\n\n- **通用智能合约**  \n  100% EVM 兼容的智能合约，无需任何**链上代码更改**即可部署。 一旦部署，它们就立即与所有链的用户兼容。\n\n- **通用 EVM**  \n  Push Chain 足够智能，可以原生识别其他链上的用户，并正确地将交易归因和映射到它们。\n\n- **共享状态和可编程求解器**  \n  （路线图）使 Push Chain 的智能合约能够读取和写入任何其他链的状态。\n\n总之，这些功能使您能够构建**通用的 Web3 app**。 用户不再是 \"以太坊上的 Uniswap\" 或 \"Polygon 上的 Uniswap\"，而只是成为 **Uniswap 用户** — 仅此而已。\n\n---",
  "problems-solved": "### Push Chain 解决了哪些问题？\n\n- **碎片化**  \n  将 EVM 和非 EVM 链 объединяет 在一个共享状态 L1 下，用户无需在网络或钱包之间跳转。\n\n- **互操作性**  \n  原生支持来自任何区块链的事务和链上共享状态。\n\n- **最终性**  \n  即时、不可逆的原生最终性，约 1-2 秒 – 不再等待或 reorg。\n\n- **入职 & UX**  \n  社交/电子邮件登录，gas-in-any-token & 任何钱包支持，实现跨链的零摩擦访问。\n\n- **通用应用**  \n  一次构建，随处部署 – 任何 web3 应用都能为任何链上的任何用户无缝工作。\n\n---",
  "what-apps-can-build": "### 你可以在 Push Chain 上构建哪些应用？\n\n![通用应用示例](/assets/website/chain/knowledge/faq/appusecases.webp)\n\n凭借 Push Chain 的 shared-state 和跨链架构，可能性是无限的。以下是一些旗舰示例：\n\n- **通用 DEX**  \n  为每个流动性池提供一个交换 UI – 抽象路由跨所有链，具有 CEX 的速度和 UX。\n\n- **通用 DeFi**  \n  您浏览器中的全球银行：跨生态系统贷款、借贷、收益聚合器，无需手动桥接。\n\n- **通用 AI 代理**  \n  在任何链上的任何 token 中支付和获得报酬的自主代理 – 非常适合订阅服务、数据机器人等。\n\n- **通用 DAO**  \n  跨链治理，其中 token 持有者投票并执行提案，无论其来源链如何。\n\n- **通用游戏**  \n  汇聚来自以太坊、Solana、Polygon 等的玩家和资产的多人锦标赛和游戏内经济。\n\n- **通用市场**  \n  在一个整合的市场中购买、出售和交易来自每条链的 NFT 和 token。\n\n- **通用名称服务**  \n  可读名称，可解析为多个区块链中的钱包。\n\n可以在 Push Chain 上发生的应用和创新是无限的！ 这里有一些 [更多用例](/blog/consumer-apps-that-can-be-built-on-push-chain/) 可以帮助你入门。 构建者还可以查看 [文档中心](/docs/) 以开始使用。\n\n---",
  "technical-section": "## 技术部分",
  "why-not-an-l2": "### 为什么不选择 L2？\n\nPush Chain 的构建是为了作为所有其他区块链的**共享结算层**和**通用执行层**——只有独立的 L1 才能完成的角色：\n\n- **原生跨链结算**  \n  作为 L1，Push Chain 可以直接最终确定来自任何链的交易，而无需依赖外部安全模型或欺诈证明。\n\n- **通用执行与状态访问**  \n  运行自己的共识和状态机器使 Push Chain 能够解释和执行来自以太坊、Solana 等的交易——这是与一个基础层绑定的 L2 无法原生完成的。\n\n- **无 L2 限制或延迟**  \n  L2 继承其宿主链的延迟、最终确定规则和 gas 模型（以及桥接开销）。Push Chain 通过在基础层提供即时最终确定和通用费用抽象来避免这些瓶颈。\n\n- **真正的共享状态**  \n  要在智能合约中读取和写入多个链的状态，您需要直接的、协议级别的访问——只有在 L1 层可用。\n\n简而言之，只有为特定目的构建的 L1 才能在不增加复杂性或信任假设的情况下将每个链统一到一个连贯的执行和结算层下。\n\n---",
  "evm-compatibility": "### Push Chain 是否兼容 EVM？\n\n是的，Push Chain **兼容 EVM**，并且功能更强大。它支持：\n\n- **EVM 智能合约**：像在 Ethereum 上一样部署 Solidity 合约\n- **Ethereum 工具**：使用 MetaMask, Hardhat, Remix 和其他熟悉的工具\n- **通用扩展**：用于跨链功能的额外预编译\n- **多 VM 支持**：(Roadmap) 支持其他 VM，例如 SVM (Solana), MoveVM 等。\n\n这意味着开发者可以：\n- 以最少的更改移植现有的 Ethereum DApp\n- 使用熟悉的开发流程和工具\n- 通过 Push Chain 的通用功能访问增强的跨链能力\n\n实际上，来自任何链上的用户和app都可以无缝地与 Push Chain app交互——无论底层 VM 如何。\n\n---",
  "evm-non-evm-compatible": "### Push Chain 是否与 EVM 和非 EVM 链兼容？\n\n是的！Push Chain 构建用于连接每种区块链范式。\n\n- **EVM 兼容性**  \n  直接使用您的 Solidity 合约，它们将在 Push Chain 的 EVM 运行时中原样运行。\n\n- **非 EVM 支持**  \n  原生预编译 (USV/UTXV) 和 universal 地址标准让 Push Chain 能够验证和执行来自 Solana、Bitcoin、Cosmos SDK 链等链上的交易。\n\n在实践中，来自任何链上的用户和app都可以无缝地与 Push Chain app交互——无论其底层的虚拟机如何。\n\n---",
  "why-not-ethereum-or-solana": "### 为什么要在以太坊和 Solana 已经存在的情况下创建新的区块链？\n\n现有的区块链在各自的特定领域表现出色，但造成了**碎片化**：\n\n- **Ethereum**：非常适合 DeFi，但昂贵且速度慢\n- **Solana**：速度快且便宜，但工具和生态系统不同\n- **L2s**：解决扩展性问题，但会造成更多的碎片化\n\nPush Chain 不与这些链竞争——它**统一它们**：\n\n- 用户可以使用他们现有的钱包（MetaMask，Phantom 等）与 Push Chain 应用交互\n- 使用他们首选的代币支付 gas（ETH，SOL，USDC）\n- 开发者无需在多个链上部署，只需构建一次\n- 来自所有链的流动性和用户可以参与到相同的应用中\n\nPush Chain 是让所有现有链无缝协同工作的**缺失环节**。\n\n---",
  "shared-state-meaning": "### 共享状态区块链意味着什么？\n\n共享状态指的是链上数据的当前状态。共享状态区块链是指能够访问自身状态以及与其交互的任何其他链的状态的区块链。\n\n共享状态链能够处理来自任何其他链的数据、流动性和用户。\n\n---",
  "how-achieve-shared-state": "### Push Chain 如何实现共享状态？\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA 传统区块链只知道它自己的账本和钱包标准。Push Chain 在四个关键方面扩展了该模型：\n\n1. **Universal Wallet Compatibility**  \n\t- 支持来自任何链的链无关地址（以太坊、Solana、Bitcoin、Cosmos SDK 等）。  \n\t- 来自任何链的签名都通过 USV/UTXV 预编译进行验证，因此用户无需切换钱包。\n\n2. **Universal Smart Contracts**  \n\t- EVM 合约部署不变，但可以原生验证和执行跨链交易。  \n\t- Push Chain 的运行时处理每个支持网络的签名映射和有效载荷解析。\n\n3. **On-Chain Shared State**  \n\t- 验证者每个区块提交外部链状态的 Merkle 证明（通过 MPT 根）。  \n\t- Relayers 根据需求获取并提交叶子证明，因此合约可以实时读取任何链的数据。\n\n4. **Programmable Solvers**  \n\t- 一个 solver 网络执行原子跨链工作流（例如，在 Chain A 上交换，在 Chain B 上铸造），在一个交易下。  \n\t- 开发者编写简单的 solver 脚本；网络处理路由和执行。\n\n总之，这些特性将 Push Chain 变成一个 **shared-state L1**，能够使 universal app 原生于所有链。一个任何用户可以在任何链上访问和交互任何链上任何 app 的世界。\n\n**Any Chain, Any App, Any User - One Push Chain**\n\n---",
  "consensus-mechanism": "### Push Chain 使用什么共识机制？\n\nPush Chain 使用 **权益证明 (PoS)** 共识，基于 **CometBFT** 引擎构建，并进行了一些增强：\n\n- **快速最终性**: 交易在约 1-2 秒内完成最终确定，具有确定性最终确定（无重组）\n- **节能高效**: PoS 相比 PoW 更具环境可持续性\n- **验证者网络**: 保护链的去中心化验证者网络\n- **抵押保护**: 经济激励确保验证者的诚实性\n\nCometBFT 经过实战检验的 BFT 共识已针对 universal 交易处理和跨链状态管理在此进行了优化。\n\n---",
  "transaction-fees": "### 区块链上的交易费用如何运作？\n\nPush Chain 通过 **Universal Fee Abstraction** 彻底革新了费用支付方式：\n\n- **使用任何代币支付**: 用户可以使用 ETH、SOL、USDC 或任何支持的代币支付gas费用\n- **跨链费用支付**: 无需桥接即可从您的原始链支付费用\n- **免 gas 交易**: App 可以赞助用户交易，实现无缝的用户体验\n- **动态费用市场**: 费用根据网络需求进行调整\n\n这意味着用户无需获取原生 Push Chain 代币即可与App交互。\n\n---",
  "true-universal-chain": "### 什么是真正的通用链？\n\n**真正的通用链** 是一个区块链，将其他所有网络视为一流公民——无需桥接、无需中心化中继者，也无需兼容性补丁。它提供：\n\n1. **原生多链身份**  \n\t来自以太坊、Solana、任何 EVM 或非 EVM 链的钱包都可以在 Push Chain 上原生签名、验证和执行。因此，用户无需切换帐户或为多个钱包的复杂性而烦恼。\n\n2. **统一结算**  \n\t来自任何网络的交易在 Push Chain 上完成最终确认，为所有人提供单一真相来源，并使所有链上的用户都可以访问相同的 app。\n\n3. **单笔交易和通用费用抽象**  \n\t用户无论来自哪个源链，只需签名一笔交易，并可以使用任何代币支付 gas。无需维护或交换无数代币即可使用一个 app。\n\n4. **部署一次，随处使用**  \n\t开发者只需编写和部署一次智能合约（EVM 或其他），无需额外代码——一次部署即可覆盖所有链。\n\nPush Chain 是第一个将这些特性直接融入其共识和运行时，真正消除碎片化的区块链——无需变通方法，无需额外层，只需为所有人提供一个通用的链。\n\n---",
  "competitors-section": "## 竞争对手",
  "vs-other-universal": "### Push Chain 与其他通用解决方案有何不同？\n\n如今所谓的“universal”解决方案仍然依赖于桥接、需要双重交易或中心化转发器来移动数据和价值。Push Chain 与众不同——它是第一个真正的通用 L1，它：\n\n- **统一跨链用户**  \n\t每个区块链地址都原生支持。MetaMask、Phantom 等钱包都与 Push Chain 兼容。Gas 可以用任何 token 在任何链上支付。\n\n- **充当通用 execution layer**  \n\t所有交易都在同一链上完成，确保每个人都与同一个 app 交互——无需 hacks，无需变通方法。\n\n- **正确归因并执行任何链上的交易**  \n\t交易经过签名、验证并归因于其源链上的钱包。真正的通用链支持所有这些。\n\n---",
  "vs-bridges-messaging": "### 这与桥接或消息传递层有什么不同？\n\n**简短回答**: Push 是您的应用运行的地方。桥接/消息传递只是在链之间移动代币或消息，这让用户和开发者都变得复杂。\n\n- **单个主页 vs 多个克隆**  \n\t使用桥接/消息传递，您需要为每个链部署并使用消息进行同步。在 Push 上，您只需部署一次；每个人都访问相同的合约和共享状态。\n\n- **无需包装资产或强制桥接**  \n\t用户停留在他们的主链上，并使用他们已经拥有的资产支付；我们处理幕后的路由和费用转换。\n\n- **统一身份 & 验证**  \n\t我们接受来自任何钱包/链的签名，并将它们归属于 Push 上的同一个用户——非托管。\n\n- **更少的活动部件**  \n\t无需跨链批准舞蹈，无需寻找 gas 代币，无需保持同步的胶水合约。\n\n- **如果您需要时使用桥接，而不是因为必须**  \n\t流动性仍然可以通过桥接移动，但是与您的应用交互不需要它。\n\n**结果**: 更简单的应用，一个事实来源，以及感觉像一个链的用户体验——即使用户实际上不是。\n\n---",
  "vs-layerzero": "### Push Chain 与 LayerZero 有何不同？\n\n**LayerZero：**\n- **消息传递协议**: 实现跨链消息传递\n- **中继依赖性**: 依赖外部中继和预言机\n- **开发者集成**: 应用必须集成 LayerZero SDK\n- **信任假设**: 用户必须信任中继基础设施\n\n**Push Chain：**\n- **原生执行**: 从任何链直接执行交易\n- **无需中继**: 协议层级内置跨链功能\n- **零集成**: 现有应用无需修改即可工作\n- **信任最小化**: 除了 Push Chain 自身的共识之外，无需额外的信任假设\n\nPush Chain 提供原生跨链执行，而 LayerZero 需要额外的基础设施和集成。\n\n---",
  "vs-wormhole": "### Push Chain 和 Wormhole 有什么不同？\n\n**Wormhole:**\n- **Bridge Protocol**: 主要专注于代币和 NFT 桥接\n- **Wrapped Assets**: 在不同链上创建代币的封装版本\n- **Guardian Network**: 依赖于 validator set 来验证跨链消息\n- **Multi-Step Process**: 用户必须先桥接资产才能使用应用\n\n**Push Chain:**\n- **Universal Execution**: 用户直接交互，无需桥接\n- **Native Assets**: 无需封装代币，使用原始资产\n- **Direct Verification**: 来自任何链的 native signature verification\n- **Single Transaction**: 用户一步完成交互，无需桥接\n\nPush Chain 消除了对资产桥接的需求，而 Wormhole 则需要它来进行跨链交互。\n\n---",
  "vs-axelar": "### Push Chain 与 Axelar 有什么不同？\n\n**Axelar:**\n- **网络网络**: 通过 Axelar 网络连接链\n- **验证者依赖**: 依赖 Axelar 验证者集合来保证安全\n- **网关合约**: 需要在每个链上部署网关合约\n- **消息传递**: 专注于跨链通信\n\n**Push Chain:**\n- **直接执行**: 交易在 Push Chain 上直接处理，没有中间环节\n- **独立安全**: 拥有独立的共识机制，没有外部依赖\n- **通用合约**: 单次部署即可适用于所有链\n- **原生执行**: 从任何链直接处理交易\n\nPush Chain 提供直接的通用访问，而 Axelar 增加了一个中间层。\n\n---",
  "vs-chainlink-ccip": "### Push Chain 与 Chainlink CCIP 有什么不同？\n\n**Chainlink CCIP:**\n- **预言机网络**: 使用 Chainlink 预言机基础设施\n- **消息路由**: 在不同链之间路由消息\n- **外部依赖**: 依赖 Chainlink 的去中心化网络\n- **集成要求**: 应用必须集成 CCIP 才能实现跨链功能\n\n**Push Chain:**\n- **内置协议**: 跨链功能是区块链固有的\n- **直接执行**: 不需要外部预言机网络\n- **自包含**: 所有验证和执行都在 Push Chain 上发生\n- **自动兼容**: 部署现有合约——它们开箱即用，适用于所有用户\n\nPush Chain 将跨链功能内置于其核心协议中，而 CCIP 是一个外部服务层。\n\n---",
  "vs-particle-network": "### Push Chain 与 Particle Network 有什么不同？\n\n**Particle Network：**\n- **账户抽象重点**: 主要关注钱包抽象和社交登录\n- **多链钱包**: 创建跨链的统一钱包体验\n- **SDK 集成**: 需要集成 Particle SDK 才能实现功能\n- **用户体验层**: 作为现有链之上的一个层来运行\n\n**Push Chain：**\n- **通用区块链**: 支持所有链用户的原生区块链\n- **协议级集成**: 跨链功能内置于共识机制中\n- **无需 SDK**: 现有钱包无需修改即可原生工作\n- **底层**: 提供基础区块链基础设施，而不仅仅是 UX 层\n\nPush Chain 是一个通用区块链，而 Particle Network 是一个钱包抽象服务。\n\n---",
  "vs-agglayer": "### Push Chain 与 AggLayer 有什么不同？\n\n**AggLayer (Polygon):**\n- **聚合层**: 聚合 Polygon 链上的流动性和状态\n- **Polygon 生态系统**: 专门为 Polygon CDK 链设计\n- **共享排序**: 为连接的链提供统一的排序\n- **生态系统特定**: 仅限于 Polygon 的链生态系统\n\n**Push Chain:**\n- **通用链**: 可与任何区块链配合使用，不特定于生态系统\n- **原生执行**: 从任何链直接执行交易\n- **链无关**: 支持以太坊、Solana、比特币以及所有其他区块链\n- **一次部署，通用应用**: 在 Push Chain 上一次部署智能合约，它就可以供来自任何链的用户访问——实现真正的应用级互操作性\n\nPush Chain 实现了跨所有区块链的通用应用的一次部署，而 AggLayer 专注于 Polygon 生态系统内的流动性和排序聚合。\n\n---",
  "vs-cosmos": "### Push Chain 与 Cosmos 有什么不同？\n\n虽然两者都能够实现跨链功能，但方法截然不同：\n\n**Cosmos:**\n- **Hub-and-Spoke 模型**: 链通过 IBC 协议连接\n- **独立生态系统**: 每个链维护自己的状态和用户\n- **手动桥接**: 用户必须在链之间桥接资产\n- **开发复杂性**: 需要在多个链上部署\n\n**Push Chain:**\n- **Universal Chain**: 单一链，原生支持所有用户\n- **Shared State**: 一个统一的状态，可以从任何链访问\n- **无需桥接**: 用户直接从源链进行交互\n- **一次部署**: 单次部署适用于所有链上的用户\n\nPush Chain 移除了手动桥接和多链部署的需求，提供更简单、统一的 UX。\n\n---",
  "vs-polkadot": "### Push Chain 与 Polkadot 有什么不同？\n\n**Polkadot：**\n- **平行链模式**: 连接链的插槽有限\n- **中继链依赖**: 所有平行链都依赖于中继链的安全\n- **Substrate 框架**: 需要特定的开发框架\n- **拍卖系统**: 昂贵的平行链插槽拍卖\n\n**Push Chain：**\n- **通用支持**: 原生支持任何现有链\n- **独立安全**: 拥有自己的共识和 validator set\n- **EVM 兼容**: 使用现有的 Ethereum 工具和合约\n- **无拍卖**: 直接集成，无需竞争竞标\n\nPush Chain 直接与现有链集成，而 Polkadot 要求链被重建为平行链。\n\n---",
  "token-section": "## 代币相关",
  "new-token": "### Push Chain 会推出新的代币吗？\n\n作为一条新的第一层区块链，Push Chain 将拥有自己的原生代币，其代币经济模型适合区块链的运行、维护和安全。\n\n有关完整详细信息，请参阅我们的 [代币经济学深度分析](/knowledge/tokenomics/) 👀。\n\n---",
  "developers-section": "## 开发者、用户和节点运营者",
  "early-adopter-incentives": "### 在 Push Chain 上，早期采用者或节点运营商是否有激励措施？\n\n节点运营商一旦 mainnet 启动即可获得 staking rewards，并鼓励参与 **Push Points Program** 以赚取奖励。\n\n鼓励早期采用者参与 **Push Points Program** 以赚取奖励。请从访问 [Push Portal](https://portal.push.org/) 开始。\n\n---",
  "developer-user-benefits": "### Push Chain 为开发者和用户提供哪些好处？\n\n**🧙 对于开发者**\n\n- **一次部署，覆盖范围扩大 10 倍**  \n只需部署一次您的 app — 无需任何代码更改 — 即可在所有支持的链上运行，甚至包括非 EVM 网络。\n\n- **便于审计，100% EVM 兼容**  \n利用现有的 Solidity 合约，无需额外的审计或重写 — 将预算集中在功能上，而非基础设施。\n\n- **统一、无摩擦的用户体验**  \n用户只需签署一笔交易，使用任何 token 支付，并通过任何 wallet 进行交互 — 您的 app 在任何地方都能正常运行。\n\n- **闪电般快速的开发体验**  \n使用我们的 SDK、虚拟编辑器和 React 游乐场启动项目 — 几分钟内即可从零开始上线。\n\n**🦹 对于用户**\n\n- **一键 onboarding**  \n使用电子邮件、社交媒体或任何现有的 wallet 登录 — 无需再输入助记词或在链之间跳转。\n\n- **无缝交互**  \ngas 费用、wallet 和链的复杂性都被隐藏 — 享受像在原生网络上一样流畅的 app 体验。\n\n- **我们速度很快**  \n交易在 1-2 秒内完成，感觉就像在原生链上一样。\n\n---",
  "how-to-build": "### 如何开始在Push Chain上开发？\n\n🚀 访问我们的[文档中心](/docs/)，获取所需的一切：\n\n- 🖥️ **虚拟代码编辑器**: 在浏览器中启动SDK函数调用\n- ⚛️ **React Playground**: 实时原型化你的前端\n- 📚 **端到端示例**: 学习完整的项目演练\n\n你可以在几分钟内启动一个示例app，无需本地设置！\n\n---",
  "dao-section": "## DAO 与 资助",
  "governance-changes": "### 新代币启动后，现有的治理系统将如何变化？\n\nPush DAO 治理系统将随着 Push Chain 的启动而发展和扩展。 这是一个预期过程，因为 Push 正在成为比最初设想的更具包容性的东西。\n\n代表、大使计划、subDAO 以及其他 DAO 举措将升级，以反映实现成为 universal 应用枢纽的关键目标，由所有促成这些应用的人员共同驱动。\n\n---",
  "doubts-section": "## 疑问解答",
  "push-services-future": "### Push 通知和 Push 聊天会发生什么变化？\n\nPush Chain 是 Push 协议愿景的自然演变。Push 协议的当前服务仍然是优先事项，确保它们不断改进，同时受益于新的基础设施。\n\n如今的 push 通知和聊天协议将从建立在 Push Chain 之上受益匪浅。专门的团队将专注于维护和增强这些协议，确保它们在各自领域保持事实上的标准。\n\n通过与 Push Chain 对齐，通过协议发送的通知和聊天将被处理为链上的交易。这种集成不仅使这些协议能够获得价值，还标志着它们演进的新篇章，进一步增强了它们在 web3 生态系统中的效用和影响力。\n\n---",
  "project-distraction": "### 这个项目会分散我们对现有服务改进的精力吗？\n\n不会，请阅读☝️ [上面](#what-happens-to-push-notification-and-push-chat)。\n\n---",
  "core-focus-shift": "### 区块链是否偏离了 Push 协议的核心关注点，即通知和聊天？\n\n不是。区块链建立在 Push 协议已确立的基础之上。区块链代表 Push 协议的**下一阶段演进**，而不是偏离。\n\n---",
  "partnerships-effect": "### Push Chain 的发布将如何影响现有的合作伙伴关系和集成？\n\nPush Chain 通过提供诸如跨链支持、更快的最终确定性和可扩展解决方案等附加功能来补充现有的合作伙伴关系。它通过使合作伙伴能够构建和扩展通用应用来加强协作。\n\n---",
  "decentralization-scaling": "### 如何在扩展的同时保持 Push Chain 的去中心化？\n\n我们的 Devnet 演示了我们将如何使用动态分片和并行执行来扩展—在不影响去中心化的同时提高吞吐量。\n\n在 testnet 上，我们专注于与 chain 的完整堆栈互操作，该 chain 在 [CometBFT](https://github.com/cometbft/cometbft) 上运行，这是一个经过充分测试的、拜占庭容错引擎。 该网络实现了亚秒级 finality 并能够处理高达 [每分钟 20k 事务](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md)。\n\n这个概念验证只是一个开始。 随着我们在后期阶段推出进一步的扩展优化，我们相信 Push Chain 可以满足 universal 应用的需求—安全且无中心化。\n\n---",
  "centralization-risks": "### 使用 Push Chain 是否存在中心化风险？\n\n**没有。** Push Chain 的架构强调去中心化。\n\nPush Chain 是完全去中心化的，旨在稳健和具有弹性。 任何人都可以运行节点并参与网络，并通过 PoS 受到激励或惩罚。 总结如下：\n\n- 验证者和其他参与者独立运作，并通过 PoS 受到激励。\n- 治理机制确保社区参与。\n- 每个生态系统参与者都在某种程度上参与治理。\n\n要了解有关如何运行节点的更多信息，请参阅我们的[知识库](/knowledge/)或查看我们的[验证者节点仓库](https://github.com/pushchain/push-chain-node)。\n\n---",
  "support-section": "## 支持与互动",
  "need-help": "### 我需要帮助，我可以在哪里联系 Push Chain？\n\n如果您需要支持，您可以在 [这里提交工单](https://push.org/support) 或通过 support@push.org 联系我们。\n\n如果您是开发者，您也可以在我们的 [Discord](https://discord.com/invite/pushchain) 上联系我们，我们将竭诚为您提供帮助。\n\n---",
  "how-to-contribute": "### 太好了，我该如何贡献?\n\nThe best way to stay on top of Push Chain's progress is through the official Push channels: website, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject), and [Discord](https://discord.com/invite/pushchain).\n\nAlways stay cautious of phishing attempts, fake sites, or scams asking for your crypto. All official communications will go out from our official Push handles.\n\n---"
}