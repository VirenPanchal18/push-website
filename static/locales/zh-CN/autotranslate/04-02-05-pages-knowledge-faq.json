{
  "seo": {
    "title": "常见问题解答 — 精选常见问题",
    "description": "关于钱包、手续费、支持的链以及如何开始的快速解答。",
    "og-title": "Push Chain 常见问题解答 - 所有问题",
    "og-description": "查找快速答案，链接到指南、Testnet 以及支持。",
    "twitter-title": "常见问题解答 - 从这里开始",
    "twitter-description": "Push Chain 问题的快速解答。"
  },
  "breadcrumbs": {
    "knowledge": {
      "text": "知识库"
    }
  },
  "title": "常见问题解答",
  "overview": "## 概述\n\n这里汇集了社区成员对 Push Chain 提出的常见问题解答。内容来自 Push Fam 🫶，并由 Push 团队 💪 整理。\n\n---",
  "what-is-push-chain": "### Push Chain 是什么？\n\nPush Chain 是一个共享状态的 Layer 1 区块链，旨在消除所有链之间的碎片化。\n\n通过**实现从任何链（以太坊、Solana、EVM 或非 EVM）的无缝交易**，它允许任何用户无需操作多个钱包、代币或 gas 机制即可与 web3 应用交互。\n\n简而言之，Push Chain 将 L1、L2 和 L3 统一到一个有凝聚力的层上。\n\n---",
  "how-does-push-chain-work": "### Push Chain 是如何运作的？\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain 采取一种独特的方法来解决跨链碎片化问题。它不依赖于互操作性协议，这些协议会给用户和开发者增加复杂性，而是采用了一种新颖的方法，通过构建一个真正的通用区块链来解决问题，任何用户都可以从任何链上原生使用它。\n\n为了实现这一点，Push Chain 利用了几个 **预编译合约**，这些合约是自定义模块，用于：\n\n1. **识别** 其他链上的用户 - 通用地址标准，扩展用户的地址使其与区块链无关（基于 [CAIP-10 标准](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)）。\n\n2. **映射** 用户到 Push Chain - 为每个外部链用户部署一个通用执行账户 (UEA)。该模块用于部署一个智能账户，然后使用其他预编译合约来处理交易。\n\n3. **执行** 通用交易 - 这是通过使用 USV（通用签名验证）和 UTXV（通用交易验证器）预编译合约来验证和执行来自其他链的签名和交易来实现的。\n\n4. **抽象** 隐藏它们所处链的复杂性 - 这是通过在每个链上拥有通用网关合约来实现的，这些合约会锁定原生代币或任何其他合规代币中的 gas 资金，然后使用 UTXV 预编译合约将 gas 归因于 UEA（执行账户），并使用 USV 来执行交易。\n\n这是一个 **极其强大的方法**，它允许用户无需担心他们所处的链或使用的钱包即可与 Push Chain 上的任何应用交互，因为所有内容都已被抽象化，对于用户和开发者都是如此。\n\n---",
  "why-unique-for-users": "### 为什么 Push Chain 对用户来说与众不同？\n\nPush Chain 解决了现有区块链中的一些具体问题，例如互操作性、跨链状态访问、可编程求解器和钱包抽象，从而实现了**真正的全栈互操作性**。虽然现有的区块链非常强大，但它们都在各自的生态系统中运行，因此需要一个聚合器来统一这些链。 \n\nPush Chain 的重点是成为一个**共享状态链**，用于通用（可互操作的）应用程序，充当一个统一层，所有链都可以汇聚在一起，并将 Push Chain 用作通用枢纽或在其之间进行结算。 \n\n它提供了一种新的 web3 范式，可以从 **Any Chain** 出发。适用于 **Any Wallet / User**。并且适用于 **Any App**。\n\n---",
  "core-innovations": "### Push Chain 的创新之处是什么？\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain 是一个权益证明的第一层区块链，旨在消除所有区块链之间的碎片化。 在底层，它结合了几项关键创新：\n\n- **真正的通用链**  \n  原生支持所有链，并允许用户与相同的应用程序交互。 无需集中式中继器、桥接或其他技巧。\n\n- **通用费用 & 钱包抽象**  \n  允许用户无需担心 gas 或钱包机制即可从任何链与应用程序交互。\n\n- **任何链的单笔交易**  \n  无论用户在哪个链上，用户只需签名一笔交易。\n\n- **通用智能合约**  \n  100% EVM 兼容的智能合约，无需进行**零链上代码更改**即可部署。 一旦部署，它们将立即与所有链上的用户兼容。\n\n- **通用 EVM**  \n  Push Chain 足够智能，能够原生识别其他链上的用户，并正确归因和映射交易。\n\n- **共享状态和可编程求解器**  \n  (Roadmap) 使 Push Chain 的智能合约能够读取和写入任何其他链上的状态。\n\n总之，这些功能使您能够构建**通用的 web3 应用程序**。 用户不再是 \"以太坊上的 Uniswap\" 或 \"Polygon 上的 Uniswap\"，而只是 **Uniswap 用户**——就是这样。\n\n---",
  "problems-solved": "### 推链解决了哪些问题？\n\n- **碎片化**\n\t统一EVM和非EVM链，在单一的共享状态L1下，用户无需跳转网络或钱包。\n\n- **互操作性**\n\t原生支持任意区块链交易和基于区块链的共享状态。\n\n- **最终确认**\n\t约1–2秒内即时、不可逆的原生最终确认，无需等待或重新组织。\n\n- **上手体验**\n\t支持社交/电子邮件登录和任何令牌/任何钱包的气体，跨链实现零摩擦访问。\n\n- **通用应用**\n\t一次构建，无缝部署到任意链 — 任意web3应用都可以在任意用户和任意链上无缝运行。\n\n---",
  "what-apps-can-build": "### 你可以在 Push Chain 上构建哪些应用？\n\n![通用应用示例](/assets/website/chain/knowledge/faq/appusecases.webp)\n\n凭借 Push Chain 的共享状态和跨链架构，可能性是无限的。以下是一些旗舰示例：\n\n- **通用 DEX**  \n  一个适用于所有流动性池的交换界面——抽象路由跨链，并具有 CEX 的速度和用户体验。\n\n- **通用 DeFi**  \n  你浏览器中的全球银行：借贷、聚合收益，无需手动跨链桥接。\n\n- **通用 AI 代理**  \n  自主代理，可以在任何链上的任何代币中支付和收款——非常适合订阅服务、数据机器人等。\n\n- **通用 DAO**  \n  跨链治理，代币持有者可以无论其来源链如何投票和执行提案。\n\n- **通用游戏**  \n  多人锦标赛和游戏内经济，将来自以太坊、Solana、Polygon 等的玩家和资产联合起来。\n\n- **通用市场**  \n  在一个统一的市场中购买、出售和交易来自每个链的 NFT 和代币。\n\n- **通用名称服务**  \n  可读名称，可解析为多个区块链上的钱包。\n\nThe apps and innovations that can happen on Push Chain are endless! Here are some [more use cases](/blog/consumer-apps-that-can-be-built-on-push-chain/) to get you started. Builders can also check out the [Documentation Hub](/docs/) to get started.\n\n---",
  "technical-section": "## 技术细节",
  "why-not-an-l2": "### 为什么不选择 L2？\n\nPush Chain 旨在作为其他所有区块链的**共享结算层**和**通用执行层**——只有独立的 L1 才能履行这些角色：\n\n- **原生跨链结算**  \n  作为 L1，Push Chain 可以直接最终确定来自任何链的交易，而无需依赖外部安全模型或欺诈证明。\n\n- **通用执行 & 状态访问**  \n  运行其自身的共识和状态机使 Push Chain 能够解释和执行来自以太坊、Solana 等的交易——而这对于与单个基础层绑定的 L2 来说，是无法原生完成的。\n\n- **无 L2 限制或延迟**  \n  L2 继承其宿主链的延迟、最终性规则和 gas 模型（加上桥接开销）。Push Chain 通过在基础层提供即时最终性和通用费用抽象来避免这些瓶颈。\n\n- **真正的共享状态**  \n  要在智能合约内读取和写入多个链的状态，您需要直接的协议级访问——这仅在 L1 层可用。\n\n简而言之，只有专门构建的 L1 才能将所有链统一到一个连贯的执行和结算层下——无需额外的复杂性或增加信任假设。\n\n---",
  "evm-compatibility": "### Push Chain 是否兼容 EVM？\n\n是的，Push Chain **兼容 EVM**，并且功能更强大。它支持：\n\n- **EVM 智能合约**: 像在以太坊上一样部署 Solidity 合约\n- **以太坊工具**: 使用 MetaMask、Hardhat、Remix 和其他熟悉的工具\n- **通用扩展**: 用于跨链功能的额外预编译\n- **多 VM 支持**: (路线图) 支持其他 VM，如 SVM (Solana), MoveVM 等\n\n这意味着开发者可以：\n- 使用最少的更改移植现有的以太坊 dApp\n- 使用熟悉的开发流程和工具\n- 通过 Push Chain 的通用功能访问增强的跨链功能\n\n实际上，来自任何链的用户和应用都可以无缝地与 Push Chain 应用交互 — 无论底层 VM 如何。\n\n---",
  "evm-non-evm-compatible": "### Push Chain 会兼容 EVM 和非 EVM 链吗？\n\n是的！Push Chain 的设计目标是连接所有区块链范式。\n\n- **EVM 兼容性**  \n  您可以直接使用 Solidity 合约，它们将保持不变地运行，利用 Push Chain 的 EVM 运行时。\n\n- **非 EVM 支持**  \n  原生预编译 (USV/UTXV) 和通用地址标准使 Push Chain 能够验证和执行来自 Solana、Bitcoin、Cosmos SDK 链等的交易。\n\n实际上，来自任何链的用户和应用都可以无缝地与 Push Chain 应用交互，无论底层 VM 如何。\n\n---",
  "why-not-ethereum-or-solana": "### 为什么要在以太坊和 Solana 已经存在的情况下创建新的区块链？\n\n现有的区块链在特定领域表现出色，但造成了**碎片化**：\n\n- **Ethereum**: 非常适合 DeFi，但费用昂贵且速度慢\n- **Solana**: 速度快且费用便宜，但工具和生态系统不同\n- **L2s**: 解决了扩展性问题，但造成了更多的碎片化\n\nPush Chain 不与这些链竞争——它**统一了它们**：\n\n- 用户可以使用他们现有的钱包（MetaMask, Phantom 等）与 Push Chain 应用互动\n- 使用他们喜欢的代币支付 gas 费用（ETH, SOL, USDC）\n- 开发者只需构建一次，无需在多个链上部署\n- 来自所有链的流动性和用户可以在同一个应用中互动\n\nPush Chain 是**缺失的一块拼图**，使所有现有链能够无缝协同工作。\n\n---",
  "shared-state-meaning": "### 什么是共享状态区块链？\n\n共享状态指的是链上数据的当前状态。共享状态区块链是指可以读写自身状态以及与其交互的任何其他链的状态的区块链。\n\n共享状态链能够处理来自任何其他链的数据、流动性和用户。\n\n---",
  "how-achieve-shared-state": "### Push Chain 如何实现共享状态？\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA traditional blockchain only knows its own ledger and wallet standard. Push Chain 在四个关键方面扩展了该模型：\n\n1. **通用钱包兼容性**  \n\t- 支持来自任何链（以太坊、Solana、比特币、Cosmos SDK 等）的链无关地址。\n\t- 通过 USV/UTXV 预编译验证来自任何链的签名，因此用户无需切换钱包。\n\n2. **通用智能合约**  \n\t- EVM 合约部署不变，但可以原生验证和执行跨链交易。\n\t- Push Chain 运行时处理每个受支持网络的签名映射和负载解析。\n\n3. **链上共享状态**  \n\t- 验证者每个区块提交外部链状态的默克尔证明（通过 MPT 根）。\n\t- 转发者根据需要获取并提交叶子证明，以便合约可以实时读取任何链的数据。\n\n4. **可编程求解器**  \n\t- 求解器网络执行原子跨链工作流程（例如，在链 A 上交换，在链 B 上铸造），在单个交易下。\n\t- 开发者编写简单的求解器脚本；网络处理路由和执行。\n\n总而言之，这些特性使 Push Chain 成为一个 **共享状态 L1**，能够使通用应用成为所有链的原生应用。一个任何链上的任何用户都能够访问和与任何链上的任何应用交互的世界。\n\n**任何链，任何应用，任何用户 - One Push Chain**\n\n---",
  "consensus-mechanism": "### Push Chain 使用什么共识机制？\n\nPush Chain 使用 **权益证明 (PoS)** 共识机制，基于 **CometBFT** 引擎构建，并进行了一些增强：\n\n- **快速确定性**: 交易在约 1–2 秒内完成最终确认，具有确定性（无重组）\n- **节能高效**: PoS 相较于 PoW 更具环境可持续性\n- **验证者网络**: 保护链安全的去中心化验证者网络\n- **惩罚保护**: 经济激励机制确保验证者的诚实性\n\nCometBFT 经过实战检验的 BFT 共识机制，针对通用交易处理和跨链状态管理的独特需求进行了优化。\n\n---",
  "transaction-fees": "### Push Chain 的交易费用是如何运作的？\n\nPush Chain 通过 **通用费用抽象** 彻底革新了费用支付方式：\n\n- **使用任何代币支付**: 用户可以使用 ETH、SOL、USDC 或任何支持的代币支付 gas 费\n- **跨链费用支付**: 无需桥接即可从您的源链支付费用\n- **免 gas 交易**: 应用可以赞助用户交易，提供无缝的用户体验\n- **动态费用市场**: 费用会根据网络需求进行调整\n\n这意味着用户无需获取原生 Push Chain 代币即可与应用进行交互。\n\n---",
  "true-universal-chain": "### 什么是真正的通用链？\n\n一个**真正的通用链**是将其他所有网络视为一级公民的区块链——无需桥接，无需中心化中继，无需兼容性黑客手段。它提供：\n\n1. **原生多链身份**  \n\t来自以太坊、Solana，任何 EVM 或非 EVM 链的钱包都可以在 Push Chain 上原生签名、验证和执行。因此用户无需切换账户，也无需为处理多个钱包的复杂性而烦恼。\n\n2. **统一结算**  \n\t来自任何网络的交易都在 Push Chain 上最终结算，为所有人提供单一的事实来源，并使同一应用可供所有链上的用户使用。\n\n3. **单笔交易和通用手续费抽象**  \n\t无论用户来自哪个源链，用户只需签名一笔交易，并可以用任何代币支付 gas 费。无需维护或兑换无数代币即可使用应用。\n\n4. **一次部署，处处使用**  \n\t开发者只需编写和部署一次智能合约（EVM 或其他），无需任何额外代码——一次部署即可覆盖所有链。\n\nPush Chain 是第一个将这些功能直接内置到其共识和运行时中的区块链，真正消除了碎片化——无需变通方法，无需额外层，只需为所有人提供一个通用的链。\n\n---",
  "competitors-section": "## 竞争对手",
  "vs-other-universal": "### Push Chain 与其他通用解决方案的区别是什么？\n\n如今所谓的“通用”解决方案仍然依赖桥接、需要双重交易或中心化中继来转移数据和价值。Push Chain 与众不同——它是第一个**真正的**通用 L1，具有以下特点：\n\n- **统一跨链用户**\n\t每个区块链地址都原生支持。MetaMask、Phantom 等钱包都与 Push Chain 兼容。Gas 可以用任何链上的任何代币支付。\n\n- **作为通用的执行层**\n\t所有交易都在同一链上完成，确保每个人都与相同的应用程序交互——没有黑客行为，没有变通方法。\n\n- **正确归因和执行任何链上的交易**\n\t交易在源链上签名、验证和归因于钱包。一个真正的通用链支持所有这些。\n\n---",
  "vs-bridges-messaging": "### 这和桥接或消息层有什么不同？\n\n**简短回答**: Push 是您的应用运行的地方。桥接/消息层只是在链之间移动代币或消息，这会使用户和开发人员的操作变得复杂。\n\n- **单个主网 vs 多个克隆**  \n\t使用桥接/消息层，您需要在每个链上部署并使用消息同步。在 Push 上，您只需部署一次；每个人都访问相同的合约和共享状态。\n\n- **无需包装资产或强制桥接**  \n\t用户停留在他们的主链上，并使用他们已持有的资产支付；我们处理路由和费用转换。\n\n- **统一的身份和验证**  \n\t我们接受来自任何钱包/链的签名，并将它们归因于 Push 上的同一用户——非托管。\n\n- **更少的活动部件**  \n\t无需跨链批准流程，无需寻找 gas 代币，无需维护同步的胶水合约。\n\n- **想用桥接就用，不用桥接也没关系**  \n\t流动性仍然可以通过桥接移动，但与您的应用交互不需要它。\n\n**结果**: 简单的应用，一个事实来源，以及一种感觉像单链的用户体验——即使用户并非如此。\n\n---",
  "vs-layerzero": "### Push Chain 和 LayerZero 有什么不同？\n\n**LayerZero：**\n- **消息协议**: 实现跨链消息传递\n- **中继依赖**: 依赖外部中继和预言机\n- **开发者集成**: 应用必须集成 LayerZero SDK\n- **信任假设**: 用户必须信任中继基础设施\n\n**Push Chain：**\n- **原生执行**: 从任何链直接执行交易\n- **无需中继**: 协议层面内置跨链功能\n- **零集成**: 现有应用无需修改即可使用\n- **信任最小化**: 除了 Push Chain 自身的共识之外，无需额外的信任假设\n\nPush Chain 提供原生跨链执行，而 LayerZero 需要额外的基础设施和集成。\n\n---",
  "vs-wormhole": "### Push Chain 与 Wormhole 有何不同？\n\n**Wormhole:**\n- **桥接协议**: 主要专注于代币和 NFT 的桥接\n- **封装资产**: 在不同链上创建代币的封装版本\n- **守护者网络**: 依赖于验证者集合来验证跨链消息\n- **多步骤流程**: 用户必须先桥接资产才能使用应用\n\n**Push Chain:**\n- **通用执行**: 用户无需桥接即可直接交互\n- **原生资产**: 无需封装代币，使用原始资产\n- **直接验证**: 从任何链进行原生签名验证\n- **单笔交易**: 用户一步到位进行交互，无需桥接\n\nPush Chain 消除资产桥接的必要性，而 Wormhole 则需要它来进行跨链交互。\n\n---",
  "vs-axelar": "### Push Chain 和 Axelar 有什么不同？\n\n**Axelar:**\n- **网络网络**: 通过 Axelar 网络连接链\n- **验证者依赖**: 依赖 Axelar 验证者集合来保障安全\n- **网关合约**: 需要在每个链上部署网关合约\n- **消息传递**: 专注于跨链通信\n\n**Push Chain:**\n- **直接执行**: 交易在 Push Chain 上直接处理，无需中间人\n- **独立安全**: 拥有独立的共识机制，没有外部依赖\n- **通用合约**: 单次部署即可适用于所有链\n- **原生执行**: 从任何链直接处理交易\n\nPush Chain 提供直接的通用访问，而 Axelar 则增加了一个中间层。\n\n---",
  "vs-chainlink-ccip": "### Push Chain 和 Chainlink CCIP 有什么不同？\n\n**Chainlink CCIP:**\n- **预言机网络**: 使用 Chainlink 预言机基础设施\n- **消息路由**: 在不同链之间路由消息\n- **外部依赖**: 依赖于 Chainlink 的去中心化网络\n- **集成要求**: 应用必须集成 CCIP 才能实现跨链功能\n\n**Push Chain:**\n- **内置协议**: 跨链功能是区块链固有的\n- **直接执行**: 不需要外部预言机网络\n- **自包含**: 所有验证和执行都在 Push Chain 上发生\n- **自动兼容**: 部署现有合约即可 — 它们可以为所有用户开箱即用\n\nPush Chain 在其核心协议中内置了跨链功能，而 CCIP 是一个外部服务层。\n\n---",
  "vs-particle-network": "### Push Chain 和 Particle Network 有什么不同？\n\n**Particle Network:**\n- **账户抽象重点**: 主要关注钱包抽象和社交登录\n- **多链钱包**: 在不同链上创建统一的钱包体验\n- **SDK 集成**: 需要集成 Particle SDK 才能实现功能\n- **用户体验层**: 作为现有链之上的层运行\n\n**Push Chain:**\n- **通用区块链**: 原生区块链，支持所有链上的用户\n- **协议级别集成**: 跨链功能内置于共识机制中\n- **无需 SDK**: 现有钱包无需修改即可原生工作\n- **基础层**: 提供底层的区块链基础设施，而不仅仅是用户体验层\n\nPush Chain 是一个通用区块链，而 Particle Network 是一个钱包抽象服务。\n\n---",
  "vs-agglayer": "### Push Chain 与 AggLayer 有什么不同？\n\n**AggLayer (Polygon):**\n- **聚合层**: 聚合 Polygon 链上的流动性和状态\n- **Polygon 生态**: 专为 Polygon CDK 链设计\n- **共享排序**: 为连接的链提供统一的排序\n- **生态特定**: 仅限于 Polygon 链生态\n\n**Push Chain:**\n- **通用链**: 适用于任何区块链，非生态特定\n- **原生执行**: 从任何链直接执行交易\n- **链无关**: 支持 Ethereum、Solana、Bitcoin 以及所有其他链\n- **一次部署，通用应用**: 在 Push Chain 上一次部署智能合约，即可让来自任何链的用户访问 — 实现真正的应用层互操作性\n\nPush Chain 使能够跨所有区块链进行单次部署的通用应用成为可能，而 AggLayer 则专注于 Polygon 生态系统内的流动性和排序聚合。\n\n---",
  "vs-cosmos": "### Push Chain 与 Cosmos 有什么不同？\n\n两者都支持跨链功能，但方法截然不同：\n\n**Cosmos:**\n- **中心枢纽模型**: 链通过 IBC 协议连接\n- **独立生态系统**: 每个链维护自己的状态和用户\n- **手动桥接**: 用户必须在链之间桥接资产\n- **开发复杂性**: 需要在多个链上部署\n\n**Push Chain:**\n- **通用链**: 单一链，原生支持所有用户\n- **共享状态**: 一个统一的状态，可从任何链访问\n- **无需桥接**: 用户直接从源链进行交互\n- **一次部署**: 单次部署适用于所有链上的用户\n\nPush Chain 消除手动桥接和多链部署的需要，提供更简单、更统一的用户体验。\n\n---",
  "vs-polkadot": "### Push Chain 和 Polkadot 有什么不同？\n\n**Polkadot:**\n- **平行链模式**: 连接链的插槽有限\n- **中继链依赖**: 所有平行链依赖于中继链的安全\n- **Substrate 框架**: 需要特定的开发框架\n- **拍卖系统**: 昂贵的平行链插槽拍卖\n\n**Push Chain:**\n- **通用支持**: 原生支持任何现有链\n- **独立安全**: 拥有自己的共识和验证者集合\n- **EVM 兼容**: 使用现有的以太坊工具和合约\n- **无拍卖**: 直接集成，无需竞争竞标\n\nPush Chain 直接与现有链集成，而 Polkadot 需要链被重建为平行链。\n\n---",
  "token-section": "## 代币相关",
  "new-token": "### Push Chain 会有新的代币吗？\n\n作为一条新的 Layer 1 链，Push Chain 将拥有自己的原生代币，其代币经济模型将适应区块链的运行、维护和安全。\n\n有关完整细节，请参阅我们的 [Tokenomics 深度解析](/knowledge/tokenomics/) 👀。\n\n---",
  "developers-section": "## 开发者、用户和节点运营者",
  "early-adopter-incentives": "### Push Chain 的早期参与者或节点运营商是否有激励措施？\n\n一旦主网启动，节点运营商将获得质押奖励，并鼓励参与 **Push Points Program** 以获得奖励。\n\n鼓励早期参与者参与 **Push Points Program** 以获得奖励。请从访问 [Push Portal](https://portal.push.org/) 开始。\n\n---",
  "developer-user-benefits": "### Push Chain 为开发者和用户提供哪些好处？\n\n**🧙 对于开发者**\n\n- **一次部署，覆盖范围扩大 10 倍**  \n只需部署一次应用——无需任何代码修改——即可在所有支持的链上运行，甚至包括非 EVM 网络。\n\n- **方便审计，100% EVM 兼容**  \n利用现有的 Solidity 合约，无需额外的审计或重写——将预算集中在功能上，而非基础设施。\n\n- **统一且流畅的用户体验**  \n用户只需签署一笔交易，使用任何代币支付，并通过任何钱包进行交互——您的应用在任何地方都能正常运行。\n\n- **闪电般快速的开发体验**  \n使用我们的 SDK、虚拟编辑器和 React 游乐场快速启动；几分钟内即可从零开始上线。\n\n**🦹 对于用户**\n\n- **一键注册**  \n使用邮箱、社交账号或任何现有钱包登录——无需记住助记词或在链之间切换。\n\n- **无缝交互体验**  \nGas 费用、钱包和链的复杂性都被隐藏起来——尽享如同原生应用般的体验。\n\n- **速度飞快**  \n交易确认速度快至 1-2 秒，如同原生链上的体验。\n\n---",
  "how-to-build": "### 如何开始在 Push Chain 上开发？\n\n🚀 访问我们的 [Documentation Hub](/docs/) 获取您所需的一切：\n\n- 🖥️ **虚拟代码编辑器**: 在浏览器中启动 SDK 函数调用\n- ⚛️ **React Playground**: 实时原型您的前端\n- 📚 **端到端示例**: 按照完整的项目演练\n\n您可以在几分钟内运行一个示例应用——无需本地设置！\n\n---",
  "dao-section": "## DAO 和资助",
  "governance-changes": "### 新代币上线后，当前的治理系统将如何改变？\n\n随着 Push Chain 的启动，Push DAO 治理系统将不断发展和扩展。这是一个预期中的过程，因为 Push 正在成为一个比最初设想的更全面的平台。\n\n代表、大使计划、子DAO 以及其他 DAO 倡议都将进行升级，以反映实现成为通用应用程序枢纽的关键目标，并由所有使其成为可能的小组运营。\n\n---",
  "doubts-section": "## 常见问题",
  "push-services-future": "### Push 通知和 Push Chat 会发生什么变化？\n\nPush Chain 是 Push Protocol 愿景的自然演进。目前 Push Protocol 的服务仍然是重中之重，我们将确保它们不断改进，并从新的基础设施中受益。\n\n如今的 Push 通知和聊天协议将从构建于 Push Chain 之上获得显著优势。专门的团队将致力于维护和增强这些协议，确保它们在各自领域保持行业标准。\n\n通过与 Push Chain 对齐，通过协议发送的通知和聊天将被视为链上的交易进行处理。这种集成不仅使这些协议能够积累价值，还标志着它们演进的新篇章，进一步增强了它们在 web3 生态系统中的效用和影响力。\n\n---",
  "project-distraction": "### 这个项目会分散我们改进现有服务的精力吗？\n\n不会，请阅读 ☝️ [上方](#what-happens-to-push-notification-and-push-chat)。\n\n---",
  "core-focus-shift": "### Push Chain 是否会偏离 Push Protocol 专注于通知和聊天的核心目标？\n\n不会。Push Chain 建立在 Push Protocol 已经建立的基础之上。Push Chain 代表着 Push Protocol 的 **下一个发展阶段**，而不是背离。\n\n---",
  "partnerships-effect": "### Push Chain 的发布将如何影响现有的合作伙伴关系和集成？\n\nPush Chain 通过提供诸如跨链支持、更快的最终确定性和可扩展的解决方案等额外功能来补充现有的合作伙伴关系。 它通过使合作伙伴能够构建和扩展通用应用程序来加强协作。\n\n---",
  "decentralization-scaling": "### Push Chain 如何在扩展规模的同时保持去中心化？\n\n我们的 Devnet 已经展示了我们将如何使用动态分片和并行执行来扩展规模——在不影响去中心化的前提下提高吞吐量。\n\n在测试网上，我们专注于与链的全面互操作性，该链运行在 [CometBFT](https://github.com/cometbft/cometbft) 上，这是一个经过实战考验的拜占庭容错引擎。该网络实现了亚秒级最终确定性，并且能够处理高达 [每分钟 20k 笔交易](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md)。\n\n这个概念验证只是一个开始。随着我们在后续阶段推出更多扩展优化，我们相信 Push Chain 可以满足通用应用程序的需求——安全可靠，且不牺牲去中心化。\n\n---",
  "centralization-risks": "### Push Chain 是否存在中心化风险？\n\n**没有。** Push Chain 的架构强调去中心化。\n\nPush Chain 是完全去中心化的，并被设计成具有强大的弹性和可靠性。任何人都可以运行节点并参与网络，并通过 PoS 受到激励或惩罚。总而言之：\n\n- 验证者和其他参与者独立运作，并通过 PoS 受到激励。\n- 治理机制确保社区参与。\n- 每个生态系统参与者都在某种程度上参与治理。\n\n要了解更多关于如何运行节点的信息，请查看我们的 [知识库](/knowledge/) 或查看我们的 [Validator Node Repo](https://github.com/pushchain/push-chain-node)。\n\n---",
  "support-section": "## 支持与参与",
  "need-help": "### 我需要帮助，在哪里联系 Push Chain？\n\n如需支持，您可以[在此提交工单](https://push.org/support) 或发送邮件至 support@push.org 联系我们。\n\n如果您是开发者，也可以在我们的 [Discord](https://discord.com/invite/pushchain) 上联系我们，我们很乐意为您提供帮助。\n\n---",
  "how-to-contribute": "### 太好了，我该如何贡献力量？\n\n关注 Push Chain 的最新进展的最佳方式是通过官方 Push 渠道：网站、[Twitter/X](https://x.com/PushChain)、[Telegram](https://t.me/epnsproject) 和 [Discord](https://discord.com/invite/pushchain)。\n\n请始终警惕网络钓鱼、虚假网站或冒充身份索要您加密货币的诈骗。所有官方沟通都将通过我们的官方 Push 账号发布。\n\n---"
}