{
  "seo": {
    "title": "Preguntas Frecuentes ‚Äî Preguntas y respuestas seleccionadas",
    "description": "Respuestas r√°pidas sobre billeteras, tarifas, cadenas compatibles y c√≥mo empezar.",
    "og-title": "Preguntas Frecuentes de Push Chain - Todas las preguntas",
    "og-description": "Encuentra respuestas r√°pidas con enlaces a gu√≠as, Testnet y soporte.",
    "twitter-title": "Preguntas Frecuentes - Empieza aqu√≠",
    "twitter-description": "Respuestas r√°pidas a preguntas sobre Push Chain."
  },
  "breadcrumbs": {
    "knowledge": {
      "text": "Base de Conocimiento"
    }
  },
  "title": "Preguntas Frecuentes",
  "overview": "## Resumen\n\nEl lugar para encontrar respuestas a las preguntas m√°s frecuentes de la comunidad sobre Push Chain. Informaci√≥n recopilada por la comunidad Push Fam ü´∂ y seleccionada por el equipo de Push üí™.\n\n---",
  "what-is-push-chain": "### ¬øQu√© es Push Chain?\n\nPush Chain es una blockchain de Capa 1 con estado compartido, creada para eliminar la fragmentaci√≥n entre todas las cadenas.\n\nAl permitir **transacciones fluidas desde cualquier cadena** (Ethereum, Solana, EVM o no EVM), permite a cualquier usuario interactuar con aplicaciones web3 sin tener que gestionar m√∫ltiples billeteras, tokens o mec√°nicas de gas.\n\nEn resumen, Push Chain une L1s ü§ù L2s ü§ù L3s bajo una capa cohesiva.\n\n---",
  "how-does-push-chain-work": "### ¬øC√≥mo funciona Push Chain?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain adopta un enfoque √∫nico para resolver el problema de la fragmentaci√≥n entre todas las cadenas. En lugar de depender de protocolos de interoperabilidad, que a√±aden complejidad tanto para los usuarios como para los desarrolladores, adopta un enfoque novedoso construyendo una verdadera blockchain universal que puede ser utilizada de forma nativa por cualquier usuario desde cualquier cadena.\n\nPara lograr esto, Push Chain aprovecha varios **precompilados** que son m√≥dulos personalizados creados para:\n\n1. **Reconocer** usuarios de otras cadenas - Est√°ndar de direcci√≥n universal que extiende la direcci√≥n de un usuario para que sea agn√≥stica a la blockchain (basado en [est√°ndares CAIP-10](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Mapear** usuarios a Push Chain - Se despliega una Cuenta Ejecutora Universal (UEA) para cada usuario de la cadena externa. Este m√≥dulo se utiliza para desplegar una cuenta inteligente que luego utiliza otros precompilados para procesar las transacciones.\n\n3. **Ejecutar** transacciones universales - Esto se hace utilizando los precompilados USV (Universal Signature Verification) y UTXV (Universal Transaction Verifier) para verificar y ejecutar firmas y transacciones de otras cadenas.\n\n4. **Abstraer** la complejidad de la cadena en la que se encuentran - Esto se logra teniendo contratos de puerta de enlace universales en cada cadena que bloquea fondos de gas en el token nativo de la cadena (o cualquier otro token compatible) y luego utiliza los precompilados UTXV para atribuir el gas a la UEA (Cuenta Ejecutora) y USV para ejecutar la transacci√≥n.\n\nEste es un **enfoque extremadamente poderoso** que permite a los usuarios interactuar con cualquier aplicaci√≥n en Push Chain sin preocuparse por la cadena en la que se encuentran o la billetera que est√°n utilizando, ya que todo est√° abstra√≠do tanto para los usuarios como para los desarrolladores.\n\n---",
  "why-unique-for-users": "### ¬øPor qu√© Push Chain es √∫nica para los usuarios?\n\nPush Chain aborda necesidades espec√≠ficas en las blockchains existentes, como la interoperabilidad, el acceso al estado entre cadenas, los solucionadores programables y la abstracci√≥n de billeteras, lo que resulta en **verdadera interoperabilidad de pila completa**. Si bien las blockchains existentes son robustas, operan en su propio ecosistema y se necesita un agregador para unirlas.\n\nEl enfoque de Push Chain es ser una **cadena de estado compartido** para aplicaciones universales (interoperables) que act√∫e como una capa unificadora donde todas las cadenas puedan unirse y usar Push Chain como un centro universal o realizar liquidaciones entre ellas.\n\nOfrece un nuevo paradigma de web3 que funciona desde **Cualquier Cadena**. Para **Cualquier Billetera / Usuario**. Y es adecuado para **Cualquier App**.\n\n---",
  "core-innovations": "### ¬øQu√© hace innovadora a Push Chain?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain es una Layer 1 Proof-of-Stake dise√±ada para eliminar la fragmentaci√≥n entre cada blockchain. En su interior, combina varias innovaciones clave:\n\n- **Cadena Universal Real**  \n  Admite nativamente todas las cadenas y permite a los usuarios interactuar con la misma aplicaci√≥n. No se necesitan relayer centralizados, puentes u otras soluciones improvisadas.\n\n- **Abstracci√≥n Universal de Tarifas y Billeteras**  \n  Permite a los usuarios interactuar con la aplicaci√≥n desde cualquier cadena sin preocuparse por el gas o la mec√°nica de la billetera.\n\n- **Una sola transacci√≥n para cualquier cadena**  \n  Los usuarios solo firman una transacci√≥n, sin importar en qu√© cadena se encuentren.\n\n- **Contratos Inteligentes Universales**  \n  Contratos inteligentes 100% compatibles con EVM que se pueden implementar con **cero cambios de c√≥digo en la cadena**. Una vez implementados, se vuelven instant√°neamente compatibles con los usuarios de todas las cadenas.\n\n- **EVM Universal**  \n  Push Chain es lo suficientemente inteligente como para reconocer nativamente a los usuarios de otras cadenas y atribuirles y mapearles correctamente las transacciones.\n\n- **Estado Compartido y Solucionadores Programables**  \n  (Roadmap) Permite que los contratos inteligentes de Push Chain lean y escriban el estado en cualquier otra cadena.\n\nEn conjunto, estas caracter√≠sticas te permiten construir **aplicaciones web3 universales**. En lugar de \"Uniswap en Ethereum\" o \"Uniswap en Polygon\", un usuario simplemente se convierte en **usuario de Uniswap**‚Äîpunto.\n\n---",
  "problems-solved": "### ¬øQu√© problemas resuelve Push Chain?\n\n- **Fragmentaci√≥n**  \n  Une cadenas EVM y no EVM bajo una L1 de estado compartido, para que los usuarios nunca tengan que cambiar de red o billetera.\n\n- **Interoperabilidad**  \n  Soporte nativo para transacciones de cualquier blockchain y estado compartido en cadena.\n\n- **Finalidad**  \n  Finalidad nativa instant√°nea e irreversible en aproximadamente 1‚Äì2 segundos: ¬°no m√°s esperas o reorgs!\n\n- **Incorporaci√≥n & UX**  \n  Inicio de sesi√≥n social/por correo electr√≥nico, gas en cualquier token y soporte para cualquier billetera para un acceso sin fricci√≥n entre cadenas.\n\n- **Aplicaciones Universales**  \n  Crea una vez, despliega en todas partes: cualquier aplicaci√≥n web3 funciona sin problemas para cualquier usuario en cualquier cadena.\n\n---",
  "what-apps-can-build": "### ¬øQu√© tipo de aplicaciones puedes construir en Push Chain?\n\n![Universal App Examples](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nCon la arquitectura compartida y entre cadenas de Push Chain, las posibilidades son infinitas. Aqu√≠ hay solo algunos ejemplos destacados:\n\n- **Universal DEX**  \n  Una interfaz de intercambio √∫nica para todos los pools de liquidez: enrutamiento abstracto a trav√©s de todas las cadenas con la velocidad y la experiencia de usuario de un CEX.\n\n- **Universal DeFi**  \n  Un banco global en tu navegador: pr√©stamos, cr√©ditos, agregadores de rendimiento que abarcan ecosistemas sin bridging manual.\n\n- **Universal AI Agents**  \n  Agentes aut√≥nomos que pagan y reciben pagos en cualquier token en cualquier cadena: perfectos para servicios de suscripci√≥n, bots de datos y m√°s.\n\n- **Universal DAOs**  \n  Gobernanza entre cadenas donde los poseedores de tokens votan y ejecutan propuestas independientemente de su cadena de origen.\n\n- **Universal Gaming**  \n  Torneos multijugador y econom√≠as dentro del juego que unen a jugadores y activos de Ethereum, Solana, Polygon y m√°s all√°.\n\n- **Universal Marketplace**  \n  Compra, vende e intercambia NFTs y tokens de todas las cadenas en un marketplace consolidado.\n\n- **Universal Name Service**  \n  Nombres legibles por humanos que se resuelven en wallets a trav√©s de m√∫ltiples blockchains.\n\n¬°Las aplicaciones e innovaciones que se pueden desarrollar en Push Chain son infinitas! Aqu√≠ hay algunos [m√°s casos de uso](/blog/consumer-apps-that-can-be-built-on-push-chain/) para comenzar. Los desarrolladores tambi√©n pueden consultar el [Documentation Hub](/docs/) para empezar.\n\n---",
  "technical-section": "## T√©cnico",
  "why-not-an-l2": "### ¬øPor qu√© una L1 y no una L2?\n\nPush Chain est√° construido para funcionar como una **capa de liquidaci√≥n compartida** y una **capa de ejecuci√≥n universal** para todas las dem√°s blockchains‚Äîroles que solo una L1 independiente puede cumplir:\n\n- **Liquidaci√≥n Nativa Intercadena**  \n  Como una L1, Push Chain puede finalizar directamente las transacciones de cualquier cadena sin depender de modelos de seguridad externos o pruebas de fraude.\n\n- **Ejecuci√≥n Universal y Acceso al Estado**  \n  Al ejecutar su propio consenso y m√°quina de estado, Push Chain puede interpretar y ejecutar transacciones de Ethereum, Solana y m√°s all√° ‚Äî algo que una L2 ‚Äî vinculada a una capa base ‚Äî no puede hacer de forma nativa.\n\n- **Sin Restricciones ni Retrasos de L2**  \n  Las L2 heredan la latencia, las reglas de finalizaci√≥n y el modelo de tarifas de su cadena anfitriona (adem√°s de la sobrecarga del puente). Push Chain evita estos cuellos de botella ofreciendo finalidad instant√°nea y abstracci√≥n universal de tarifas en la capa base.\n\n- **Estado Compartido Verdadero**  \n  Para leer y escribir el estado de m√∫ltiples cadenas dentro de los contratos inteligentes, necesitas acceso directo a nivel de protocolo‚Äîsolo disponible en la capa L1.\n\nEn resumen, solo una L1 construida con un prop√≥sito espec√≠fico puede unificar cada cadena bajo una capa cohesiva de ejecuci√≥n y liquidaci√≥n ‚Äî sin complejidad adicional ni suposiciones de confianza a√±adidas.\n\n---",
  "evm-compatibility": "### ¬øEs Push Chain compatible con EVM?\n\nS√≠, Push Chain es **compatible con EVM** y mucho m√°s. Soporta:\n\n- **Contratos Inteligentes EVM**: Implementa contratos Solidity como en Ethereum\n- **Herramientas de Ethereum**: Usa MetaMask, Hardhat, Remix y otras herramientas familiares\n- **Extensiones Universales**: Precompilados adicionales para funcionalidad entre cadenas\n- **Soporte Multi-VM**: (Hoja de ruta) Soporte para otras VMs como SVM (Solana), MoveVM, etc.\n\nEsto significa que los desarrolladores pueden:\n- Portar dApps existentes de Ethereum con cambios m√≠nimos\n- Utilizar flujos de trabajo y herramientas de desarrollo familiares\n- Acceder a capacidades mejoradas entre cadenas a trav√©s de las funciones universales de Push Chain\n\nEn la pr√°ctica, los usuarios y las aplicaciones de cualquier cadena pueden interactuar con las aplicaciones de Push Chain de forma fluida, sin importar la VM subyacente.\n\n---",
  "evm-non-evm-compatible": "### ¬øSer√° Push Chain compatible con cadenas EVM y no EVM?\n\n¬°S√≠! Push Chain est√° dise√±ado para conectar todos los paradigmas de blockchain.\n\n- **Compatibilidad EVM**\n  Implementa tus contratos Solidity y se ejecutar√°n sin cambios, aprovechando el runtime EVM de Push Chain.\n\n- **Soporte para no EVM**\n  Precompilados nativos (USV/UTXV) y el est√°ndar universal de direcciones permiten a Push Chain validar y ejecutar transacciones desde Solana, Bitcoin, cadenas Cosmos SDK y m√°s.\n\nEn la pr√°ctica, los usuarios y las aplicaciones de cualquier cadena pueden interactuar con las aplicaciones de Push Chain sin problemas, independientemente de la VM subyacente.\n\n---",
  "why-not-ethereum-or-solana": "### ¬øPor qu√© crear una nueva blockchain cuando ya existen otras como Ethereum y Solana?\n\nLas blockchains existentes sobresalen en sus dominios espec√≠ficos pero crean **fragmentaci√≥n**:\n\n- **Ethereum**: Genial para DeFi, pero cara y lenta\n- **Solana**: R√°pida y econ√≥mica, pero con diferentes herramientas y ecosistema\n- **L2s**: Solucionan el escalado, pero crean m√°s fragmentaci√≥n\n\nPush Chain no compite con estas chains, sino que las **unifica**:\n\n- Los usuarios pueden interactuar con las apps de Push Chain usando sus wallets existentes (MetaMask, Phantom, etc.)\n- Pagar gas en sus tokens preferidos (ETH, SOL, USDC)\n- Los desarrolladores construyen una vez en lugar de desplegar en m√∫ltiples chains\n- La liquidez y los usuarios de todas las chains pueden interactuar en las mismas apps\n\nPush Chain es la **pieza faltante** que hace que todas las chains existentes funcionen juntas sin problemas.\n\n---",
  "shared-state-meaning": "### ¬øQu√© significa blockchain de estado compartido?\n\nEl estado compartido se refiere al estado presente de los datos en la cadena. Una blockchain de estado compartido es aquella que tiene acceso de lectura y escritura a su propio estado y al estado de todas las dem√°s cadenas con las que interact√∫a.\n\nUna cadena de estado compartido es capaz de manejar datos, liquidez y usuarios desde cualquier otra cadena.\n\n---",
  "how-achieve-shared-state": "### ¬øC√≥mo logra Push Chain un estado compartido?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA una blockchain tradicional solo le conoce su propio libro mayor y su est√°ndar de billetera. Push Chain extiende ese modelo de cuatro maneras clave:\n\n1. **Compatibilidad Universal de Billeteras**  \n\t- Soporta direcciones independientes de la cadena de cualquier cadena (Ethereum, Solana, Bitcoin, Cosmos SDK, etc.)  \n\t- Las firmas de cualquier cadena se verifican a trav√©s de precompilaciones USV/UTXV, por lo que los usuarios nunca cambian de billetera.\n\n2. **Contratos Inteligentes Universales**  \n\t- Los contratos EVM se implementan sin cambios, pero pueden verificar y ejecutar transacciones entre cadenas de forma nativa.  \n\t- El entorno de ejecuci√≥n de Push Chain gestiona el mapeo de firmas y el an√°lisis de carga √∫til para cada red compatible.\n\n3. **Estado Compartido On-Chain**  \n\t- Los validadores comprometen pruebas Merkle del estado de cadenas externas (a trav√©s de ra√≠ces MPT) cada bloque.  \n\t- Los relayer obtienen y env√≠an pruebas de hoja bajo demanda, para que los contratos puedan leer los datos de cualquier cadena en tiempo real.\n\n4. **Solucionadores Programables**  \n\t- Una red de solucionadores ejecuta flujos de trabajo entre cadenas at√≥micos (por ejemplo, intercambio en Cadena A, acu√±aci√≥n en Cadena B) bajo una sola transacci√≥n.  \n\t- Los desarrolladores escriben scripts de solucionador simples; la red gestiona el enrutamiento y la ejecuci√≥n.\n\nEn conjunto, estas caracter√≠sticas convierten a Push Chain en una **L1 de estado compartido** que permite que las aplicaciones universales sean nativas de todas las cadenas. Un mundo donde cualquier usuario de cualquier cadena puede acceder e interactuar con cualquier aplicaci√≥n en cualquier otra cadena.\n\n**Cualquier Cadena, Cualquier App, Cualquier Usuario - Un Push Chain**\n\n---",
  "consensus-mechanism": "### ¬øQu√© mecanismo de consenso utiliza Push Chain?\n\nPush Chain utiliza el consenso **Proof-of-Stake (PoS)**, construido sobre el motor **CometBFT**, con varias mejoras:\n\n- **Finalidad R√°pida**: Las transacciones se finalizan en ~1‚Äì2 segundos, con finalidad determinista (sin reorgs)\n- **Eficiencia Energ√©tica**: PoS es sostenible medioambientalmente en comparaci√≥n con PoW\n- **Red de Validadores**: Red descentralizada de validadores que asegura la cadena\n- **Protecci√≥n contra Slashing**: Los incentivos econ√≥micos aseguran la honestidad de los validadores\n\nEl consenso BFT probado en batalla de CometBFT est√° optimizado aqu√≠ para los requisitos √∫nicos del procesamiento universal de transacciones y la gesti√≥n del estado entre cadenas.\n\n---",
  "transaction-fees": "### ¬øC√≥mo funcionan las tarifas de transacci√≥n en Push Chain?\n\nPush Chain revoluciona el pago de tarifas con la **Abstracci√≥n Universal de Tarifas**:\n\n- **Paga con Cualquier Token**: Los usuarios pueden pagar el gas con ETH, SOL, USDC o cualquier token soportado.\n- **Pago de Tarifas Intercadena**: Paga las tarifas desde tu cadena de origen sin necesidad de realizar un puente.\n- **Transacciones Sin Gas**: Las aplicaciones pueden patrocinar las transacciones de los usuarios para una experiencia de usuario fluida.\n- **Mercado de Tarifas Din√°mico**: Las tarifas se ajustan seg√∫n la demanda de la red.\n\nEsto significa que los usuarios nunca necesitan adquirir tokens nativos de Push Chain solo para interactuar con las aplicaciones.\n\n---",
  "true-universal-chain": "### ¬øQu√© significa Cadena Universal Verdadera?\n\nUna **cadena universal verdadera** es una blockchain que trata a todas las dem√°s redes como ciudadanos de primera clase: sin puentes, sin retransmisores centralizados y sin trucos de compatibilidad. Ofrece:\n\n1. **Identidad Multichain Nativa**\n\tLas billeteras de Ethereum, Solana, cualquier cadena EVM o no EVM firman, verifican y ejecutan nativamente en Push Chain. As√≠, los usuarios nunca cambian de cuenta ni se ven complicados por la complejidad de m√∫ltiples billeteras.\n\n2. **Liquidaci√≥n Unificada**\n\tLas transacciones de cualquier red se finalizan en Push Chain, brindando una √∫nica fuente de verdad y permitiendo que la misma aplicaci√≥n sea accesible para usuarios de todas las cadenas.\n\n3. **Una Sola Transacci√≥n y Abstracci√≥n Universal de Tarifas**\n\tLos usuarios firman una sola transacci√≥n, independientemente de su cadena de origen, y pagan el gas en cualquier token. Se acab√≥ el tener que mantener o intercambiar innumerables tokens para usar una aplicaci√≥n.\n\n4. **Despliega Una Vez, Usa en Todas Partes**\n\tLos desarrolladores escriben y despliegan contratos inteligentes una vez (EVM o de otro tipo) con **cero** c√≥digo extra: un √∫nico despliegue cubre todas las cadenas.\n\nPush Chain es la primera en incorporar estas caracter√≠sticas directamente en su consenso y tiempo de ejecuci√≥n, eliminando verdaderamente la fragmentaci√≥n: sin soluciones alternativas, sin capas adicionales, solo una cadena universal para todos.\n\n---",
  "competidores-seccion": "## Competidores",
  "vs-other-universal": "### ¬øQu√© diferencia a Push Chain de otras Soluciones Universales?\n\nLas soluciones \"universales\" de hoy en d√≠a todav√≠a dependen de puentes, requieren transacciones dobles o retransmisores centralizados para mover datos y valor. Push Chain es diferente: es la primera L1 **verdaderamente** universal que:\n\n- **Unifica a los usuarios entre cadenas**  \n\tCada direcci√≥n de blockchain es compatible de forma nativa. Wallets como MetaMask, Phantom, etc. son compatibles con Push Chain. El gas se paga en cualquier token en cualquier cadena.\n\n- **Act√∫a como una capa de ejecuci√≥n universal**  \n\tTodas las transacciones se finalizan en la misma cadena, asegurando que todos interact√∫en con la misma aplicaci√≥n: sin hacks, sin soluciones alternativas.\n\n- **Atribuye y ejecuta correctamente las transacciones de cualquier cadena**  \n\tLas transacciones se firman, verifican y atribuyen a las wallets en sus cadenas de origen. Una verdadera cadena universal las soporta todas.\n\n---",
  "vs-bridges-messaging": "### ¬øEn qu√© se diferencia esto de los puentes o las capas de mensajer√≠a?\n\n**Respuesta corta**: Push es donde se ejecuta tu aplicaci√≥n. Los puentes/mensajer√≠a solo mueven tokens o mensajes entre cadenas, lo que complica todo para los usuarios y desarrolladores.\n\n- **Un hogar √∫nico vs muchos clones**  \n\tCon puentes/mensajer√≠a, implementas por cada cadena y sincronizas v√≠a mensajes. En Push, implementas una vez; todos acceden al mismo contrato y estado compartido.\n\n- **Sin activos envueltos o puentes obligatorios**  \n\tLos usuarios permanecen en su cadena de origen y pagan con lo que ya tienen; nosotros manejamos el enrutamiento y la conversi√≥n de tarifas bajo el cap√≥.\n\n- **Identidad y verificaci√≥n unificada**  \n\tAceptamos firmas de cualquier billetera/cadena y las atribuimos al mismo usuario en Push ‚Äî no custodial.\n\n- **Menos piezas m√≥viles**  \n\tSin bailes de aprobaci√≥n entre cadenas, sin b√∫squeda de tokens de gas, sin contratos de pegamento que mantener sincronizados.\n\n- **Usa puentes cuando quieras, no porque tengas que hacerlo**  \n\tLa liquidez a√∫n puede moverse v√≠a puentes, pero interactuar con tu aplicaci√≥n no lo requiere.\n\n**Resultado**: aplicaciones m√°s simples, una √∫nica fuente de verdad y una UX que se siente como una sola cadena ‚Äî incluso cuando los usuarios no lo est√©n.\n\n---",
  "vs-layerzero": "### ¬øEn qu√© se diferencia Push Chain de LayerZero?\n\n**LayerZero:**\n- **Protocolo de Mensajes**: Permite el paso de mensajes entre cadenas\n- **Dependencia de Relayes**: Depende de relayes y or√°culos externos\n- **Integraci√≥n para Desarrolladores**: Las aplicaciones deben integrar el SDK de LayerZero\n- **Supuestos de Confianza**: Los usuarios deben confiar en la infraestructura de los relayes\n\n**Push Chain:**\n- **Ejecuci√≥n Nativa**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **Sin Relayes**: Funcionalidad entre cadenas incorporada a nivel de protocolo\n- **Cero Integraci√≥n**: Las aplicaciones existentes funcionan sin modificaciones\n- **Confianza Minimizada**: No se requieren supuestos de confianza adicionales m√°s all√° del consenso propio de Push Chain\n\nPush Chain proporciona ejecuci√≥n nativa entre cadenas, mientras que LayerZero requiere infraestructura e integraci√≥n adicionales.\n\n---",
  "vs-wormhole": "### ¬øEn qu√© se diferencia Push Chain de Wormhole?\n\n**Wormhole:**\n- **Protocolo de puente**: Principalmente enfocado en el puenteo de tokens y NFTs\n- **Activos envueltos (Wrapped Assets)**: Crea versiones envueltas de tokens en diferentes cadenas\n- **Red de Guardianes**: Depende de un conjunto de validadores para verificar mensajes entre cadenas\n- **Proceso de m√∫ltiples pasos**: Los usuarios deben puentear los activos antes de usarlos\n\n**Push Chain:**\n- **Ejecuci√≥n universal**: Los usuarios interact√∫an directamente sin necesidad de puentear\n- **Activos nativos**: No se necesitan tokens envueltos, usa los activos originales\n- **Verificaci√≥n directa**: Verificaci√≥n nativa de firmas desde cualquier cadena\n- **Una sola transacci√≥n**: Los usuarios interact√∫an en un solo paso, sin puenteo requerido\n\nPush Chain elimina la necesidad de puentear activos, mientras que Wormhole lo requiere para las interacciones entre cadenas.\n\n---",
  "vs-axelar": "### ¬øC√≥mo se diferencia Push Chain de Axelar?\n\n**Axelar:**\n- **Red de Redes**: Conecta cadenas a trav√©s de la red Axelar\n- **Dependencia de Validadores**: Depende del conjunto de validadores de Axelar para la seguridad\n- **Contratos de Puerta de Enlace**: Requiere despliegues de puerta de enlace en cada cadena\n- **Paso de Mensajes**: Se centra en la comunicaci√≥n entre cadenas\n\n**Push Chain:**\n- **Ejecuci√≥n Directa**: Las transacciones se procesan de forma nativa en Push Chain sin intermediarios\n- **Seguridad Independiente**: Propio consenso sin dependencias externas\n- **Contratos Universales**: Un solo despliegue funciona para todas las cadenas\n- **Ejecuci√≥n Nativa**: Procesamiento directo de transacciones desde cualquier cadena\n\nPush Chain proporciona acceso universal directo mientras que Axelar a√±ade una capa intermedia.\n\n---",
  "vs-chainlink-ccip": "### ¬øEn qu√© se diferencia Push Chain de Chainlink CCIP?\n\n**Chainlink CCIP:**\n- **Red de Or√°culos**: Utiliza la infraestructura de or√°culos de Chainlink\n- **Enrutamiento de Mensajes**: Enruta mensajes entre diferentes cadenas\n- **Dependencia Externa**: Depende de la red descentralizada de Chainlink\n- **Integraci√≥n Requerida**: Las aplicaciones deben integrar CCIP para funciones entre cadenas\n\n**Push Chain:**\n- **Protocolo Integrado**: La funcionalidad entre cadenas es nativa de la blockchain\n- **Ejecuci√≥n Directa**: No se necesita red de or√°culos externa\n- **Autocontenido**: Toda la verificaci√≥n y ejecuci√≥n ocurre en Push Chain\n- **Compatibilidad Autom√°tica**: Implementa contratos existentes: funcionan directamente para todos los usuarios\n\nPush Chain tiene capacidades entre cadenas integradas en su protocolo central, mientras que CCIP es una capa de servicio externa.\n\n---",
  "vs-particle-network": "### ¬øEn qu√© se diferencia Push Chain de Particle Network?\n\n**Particle Network:**\n- **Enfoque en Abstracci√≥n de Cuentas**: Se centra principalmente en la abstracci√≥n de billeteras y el inicio de sesi√≥n social.\n- **Billeteras Multi-Cadena**: Crea una experiencia de billetera unificada en diferentes cadenas.\n- **Integraci√≥n de SDK**: Requiere la integraci√≥n del SDK de Particle para su funcionalidad.\n- **Capa de Experiencia de Usuario**: Opera como una capa sobre cadenas existentes.\n\n**Push Chain:**\n- **Blockchain Universal**: Blockchain nativa que soporta a todos los usuarios de cadenas.\n- **Integraci√≥n a Nivel de Protocolo**: Funcionalidad entre cadenas construida en el consenso.\n- **No se Requiere SDK**: Las billeteras existentes funcionan de forma nativa sin modificaciones.\n- **Capa Base**: Proporciona la infraestructura blockchain subyacente, no solo una capa de UX.\n\nPush Chain es una blockchain universal mientras que Particle Network es un servicio de abstracci√≥n de billeteras.\n\n---",
  "vs-agglayer": "### ¬øEn qu√© se diferencia Push Chain de AggLayer?\n\n**AggLayer (Polygon):**\n- **Capa de Agregaci√≥n**: Agrega liquidez y estado a trav√©s de las cadenas de Polygon\n- **Ecosistema Polygon**: Dise√±ada espec√≠ficamente para las cadenas CDK de Polygon\n- **Secuenciaci√≥n Compartida**: Proporciona una secuenciaci√≥n unificada para las cadenas conectadas\n- **Espec√≠fica del Ecosistema**: Limitada al ecosistema de cadenas de Polygon\n\n**Push Chain:**\n- **Cadena Universal**: Funciona con cualquier blockchain, no espec√≠fica del ecosistema\n- **Ejecuci√≥n Nativa**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **Agn√≥stica a la Cadena**: Soporta Ethereum, Solana, Bitcoin y todas las dem√°s\n- **Una Implementaci√≥n, Aplicaciones Universales**: Implementa un contrato inteligente una vez en Push Chain y se vuelve accesible a los usuarios desde cualquier cadena, permitiendo una verdadera interoperabilidad a nivel de aplicaci√≥n\n\nPush Chain habilita aplicaciones universales con una √∫nica implementaci√≥n en todas las blockchains, mientras que AggLayer se centra en la agregaci√≥n de liquidez y secuenciaci√≥n dentro del ecosistema Polygon.\n\n---",
  "vs-cosmos": "### ¬øC√≥mo se diferencia Push Chain de Cosmos?\n\nSi bien ambos permiten la funcionalidad entre cadenas, los enfoques son fundamentalmente diferentes:\n\n**Cosmos:**\n- **Modelo Hub-and-Spoke (Concentrador y Radios)**: Las cadenas se conectan a trav√©s del protocolo IBC\n- **Ecosistemas Separados**: Cada cadena mantiene su propio estado y usuarios\n- **Bridging Manual**: Los usuarios deben puentear activos entre cadenas\n- **Complejidad para Desarrolladores**: Necesidad de desplegar en m√∫ltiples cadenas\n\n**Push Chain:**\n- **Cadena Universal**: Una sola cadena que soporta nativamente a todos los usuarios\n- **Estado Compartido**: Un estado unificado accesible desde cualquier cadena\n- **Sin Bridging**: Los usuarios interact√∫an directamente desde su cadena de origen\n- **Despliegue √önico**: Un solo despliegue funciona para todos los usuarios de las cadenas\n\nPush Chain elimina la necesidad de bridging manual y despliegues multi-cadena, ofreciendo una experiencia de usuario (UX) m√°s simple y unificada.\n\n---",
  "vs-polkadot": "### ¬øEn qu√© se diferencia Push Chain de Polkadot?\n\n**Polkadot:**\n- **Modelo de Parachains**: Slots limitados para cadenas conectadas\n- **Dependencia de la Relay Chain**: Todas las parachains dependen de la seguridad de la relay chain\n- **Framework Substrate**: Requiere un framework de desarrollo espec√≠fico\n- **Sistema de Subastas**: Subastas de slots de parachains costosas\n\n**Push Chain:**\n- **Soporte Universal**: Soporta nativamente cualquier cadena existente\n- **Seguridad Independiente**: Propio consenso y conjunto de validadores\n- **Compatible con EVM**: Usa herramientas y contratos existentes de Ethereum\n- **Sin Subastas**: Integraci√≥n directa sin licitaciones competitivas\n\nPush Chain se integra directamente con las cadenas existentes, mientras que Polkadot requiere que las cadenas se reconstruyan como parachains.\n\n---",
  "token-section": "## Informaci√≥n sobre el Token",
  "new-token": "### ¬øHabr√° un nuevo token asociado a Push Chain?\n\nComo una nueva capa 1, Push Chain tendr√≠a su propio token nativo con token√≥mica adecuada para el funcionamiento, mantenimiento y seguridad de una blockchain.\n\nPara todos los detalles, consulta nuestro [an√°lisis profundo de la token√≥mica](/knowledge/tokenomics/) üëÄ.\n\n---",
  "developers-section": "## Desarrolladores, Usuarios y Operadores de Nodos",
  "early-adopter-incentives": "### ¬øExisten incentivos para los primeros usuarios u operadores de nodos en Push Chain?\n\nLos operadores de nodos ganar√°n recompensas por staking una vez que se lance la mainnet y se les anima a participar en el **Programa Push Points** para obtener recompensas.\n\nSe anima a los primeros usuarios a participar en el **Programa Push Points** para obtener recompensas. Comienza visitando [Push Portal](https://portal.push.org/).\n\n---",
  "developer-user-benefits": "### ¬øQu√© beneficios ofrece Push Chain a desarrolladores y usuarios?\n\n**üßô Para Desarrolladores**\n\n- **Despliega una vez, multiplica tu alcance por 10**\nDespliega tu App una sola vez ‚Äîsin cambios en el c√≥digo‚Äî y funcionar√° en cada cadena compatible, incluso en redes no EVM.\n\n- **Compatible con EVM al 100%, f√°cil de auditar**\nUtiliza contratos Solidity existentes sin auditor√≠as o reescrituras adicionales‚Äîenfoca tu presupuesto en las funciones, no en la infraestructura.\n\n- **UX unificado y sin complicaciones**\nLos usuarios firman una √∫nica transacci√≥n, pagan con cualquier token e interact√∫an a trav√©s de cualquier wallet‚Äîtu app simplemente funciona en todas partes.\n\n- **DX ultrarr√°pido**\nComienza r√°pidamente con nuestros SDKs, editores virtuales y React playgrounds; pasa de cero a activo en minutos.\n\n**ü¶π Para Usuarios**\n\n- **Onboarding con un solo clic**\nInicia sesi√≥n con correo electr√≥nico, redes sociales o cualquier wallet existente‚Äîolv√≠date de las frases semilla o de saltar entre cadenas.\n\n- **Interacciones sin complicaciones**\nLas complejidades del gas, la wallet y la cadena quedan ocultas‚Äîdisfruta de las apps como si fueran nativas de tu red.\n\n- **Somos r√°pidos**\nLas transacciones se finalizan en 1-2 segundos, se siente como si fueran nativas de la cadena en la que est√°s.\n\n---",
  "how-to-build": "### ¬øC√≥mo pueden los desarrolladores empezar a construir en Push Chain?\n\nüöÄ Visita nuestro [Documentation Hub](/docs/) para obtener todo lo que necesitas:\n\n- üñ•Ô∏è **Editores de C√≥digo Virtuales**: Inicia llamadas de funci√≥n SDK en tu navegador\n- ‚öõÔ∏è **React Playground**: Prototipa tu frontend en tiempo real\n- üìö **Ejemplos de Extremo a Extremo**: Sigue gu√≠as completas de proyectos\n\n¬°Tendr√°s una aplicaci√≥n de muestra en funcionamiento en minutos, sin necesidad de configuraci√≥n local!\n\n---",
  "dao-section": "## DAO y Subvenciones",
  "governance-changes": "### ¬øC√≥mo cambiar√° el sistema de gobernanza actual con el lanzamiento del nuevo token?\n\nEl sistema de gobernanza de Push DAO evolucionar√° y se expandir√° con el lanzamiento de Push Chain. Este es un proceso esperado, ya que Push se est√° convirtiendo en algo m√°s amplio que el original.\n\nLos delegados, los programas de embajadores, las subDAOs y otras iniciativas de la DAO se actualizar√°n para reflejar los objetivos clave de lograr el estatus como el centro para aplicaciones universales, gestionadas por todos los grupos que las hacen posibles.\n\n---",
  "doubts-section": "## Dudas",
  "push-services-future": "### ¬øQu√© pasa con las Notificaciones Push y el Chat Push?\n\nPush Chain es una evoluci√≥n natural de la visi√≥n de Push Protocol. Los servicios actuales de Push Protocol siguen siendo una prioridad, asegurando que contin√∫en mejorando mientras se benefician de la nueva infraestructura.\n\nLos protocolos actuales de notificaci√≥n push y chat se beneficiar√°n significativamente al estar construidos sobre Push Chain. Una secci√≥n dedicada del equipo se centrar√° en mantener y mejorar estos protocolos, asegurando que sigan siendo el est√°ndar de facto en sus respectivos dominios.\n\nAl alinearse con Push Chain, las notificaciones y los chats enviados a trav√©s de los protocolos se procesar√°n como transacciones en la cadena. Esta integraci√≥n no solo permite que estos protocolos acumulen valor, sino que tambi√©n marca el comienzo de un nuevo cap√≠tulo en su evoluci√≥n, mejorando a√∫n m√°s su utilidad e impacto dentro del ecosistema web3.\n\n---",
  "project-distraction": "### ¬øEs este proyecto una distracci√≥n de la mejora de los servicios actuales?\n\nNo, lee ‚òùÔ∏è [arriba](#what-happens-to-push-notification-and-push-chat).\n\n---",
  "core-focus-shift": "### ¬øRepresenta Push Chain un cambio en el enfoque principal de Push Protocol en cuanto a notificaciones y chat?\n\nNo. Push Chain se basa en la base establecida de Push Protocol. Push Chain representa la **pr√≥xima evoluci√≥n** de Push Protocol, no una desviaci√≥n.\n\n---",
  "partnerships-effect": "### ¬øC√≥mo afectar√° el lanzamiento de Push Chain a las asociaciones e integraciones existentes?\n\nPush Chain complementa las asociaciones existentes ofreciendo capacidades adicionales como soporte entre cadenas, finalizaci√≥n m√°s r√°pida y soluciones escalables. Fortalece las colaboraciones permitiendo a los socios construir y escalar aplicaciones universales.\n\n---",
  "decentralization-scaling": "### ¬øC√≥mo mantendr√° Push Chain la descentralizaci√≥n mientras se escala?\n\nNuestra Devnet demostr√≥ c√≥mo escalaremos utilizando shardings din√°micos y ejecuci√≥n paralela, aumentando el rendimiento sin comprometer la descentralizaci√≥n.\n\nEn testnet, nos enfocamos en la interoperabilidad full-stack con la cadena ejecut√°ndose en [CometBFT](https://github.com/cometbft/cometbft), un motor probado y tolerante a fallas bizantinas. La red logr√≥ una finalizaci√≥n en menos de un segundo y tiene la capacidad de manejar hasta [20k transacciones por minuto](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md).\n\nEsta prueba de concepto es solo el comienzo. A medida que implementemos m√°s optimizaciones de escalabilidad en fases posteriores, estamos seguros de que Push Chain puede satisfacer las demandas de aplicaciones universales de forma segura y sin centralizaci√≥n.\n\n---",
  "centralization-risks": "### ¬øExisten riesgos de centralizaci√≥n con Push Chain?\n\n**No.** La arquitectura de Push Chain enfatiza la descentralizaci√≥n.\n\nPush Chain est√° completamente descentralizado y est√° dise√±ado para ser robusto y resiliente. Cualquiera puede ejecutar un nodo y participar en la red, y se incentiva o penaliza a trav√©s de PoS. En resumen:\n\n- Los validadores y otros actores operan de forma independiente y se incentivan a trav√©s de PoS.\n- Los mecanismos de gobernanza aseguran la participaci√≥n de la comunidad.\n- Todas las partes del ecosistema est√°n incluidas en la gobernanza en cierta medida.\n\nPara obtener m√°s informaci√≥n sobre c√≥mo ejecutar un nodo, consulta nuestra [Base de Conocimiento](/knowledge/) o consulta nuestro [Repositorio de Nodos Validador](https://github.com/pushchain/push-chain-node).\n\n---",
  "support-section": "## Soporte y Participaci√≥n",
  "need-help": "### Necesito ayuda, ¬ød√≥nde puedo contactar a Push Chain?\n\nPara soporte, puedes [enviar un ticket aqu√≠](https://push.org/support) o contactarnos en support@push.org.\n\nSi eres desarrollador, tambi√©n puedes contactarnos en nuestro [Discord](https://discord.com/invite/pushchain) y estaremos encantados de ayudarte.\n\n---",
  "how-to-contribute": "### ¬°Genial, ¬øc√≥mo puedo contribuir?\n\nLa mejor manera de estar al tanto del progreso de Push Chain es a trav√©s de los canales oficiales de Push: sitio web, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject), y [Discord](https://discord.com/invite/pushchain).\n\nTen siempre precauci√≥n con los intentos de phishing, sitios falsos o estafas que te soliciten tus criptomonedas. Todas las comunicaciones oficiales se realizar√°n desde nuestros canales oficiales de Push.\n\n---"
}